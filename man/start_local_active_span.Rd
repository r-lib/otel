% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{start_local_active_span}
\alias{start_local_active_span}
\title{Start and activate a span}
\usage{
start_local_active_span(
  name = NULL,
  attributes = NULL,
  links = NULL,
  options = NULL,
  ...,
  tracer = NULL,
  activation_scope = parent.frame(),
  end_on_exit = TRUE
)
}
\arguments{
\item{name}{Name of the span. If not specified it will be \code{"<NA>"}.}

\item{attributes}{Span attributes. You may use \code{\link[=as_attributes]{as_attributes()}} to
convert R objects to OpenTelemetry attributes. OpenTelemetry supports
the following R types as attributes:
character, logical, double, integer.}

\item{links}{A named list of links to other spans. Every link must be an
OpenTelemetry span (\code{otel_span}) object, or a list with a span
object as the first element and named span attributes as the rest.}

\item{options}{A named list of span options. May include:
* \code{start_system_time}: Start time in system time.
* \code{start_steady_time}: Start time using a steady clock.
* \code{parent}: A parent span or span context. If it is \code{NA}, then the
span has no parent and it will be a root span. If it is \code{NULL}, then
the current context is used, i.e. the active span, if any.}

\item{...}{Additional arguments are passed to the \code{get_tracer()} method
of the tracer.}

\item{tracer}{A tracer object or the name of the tracer to use, see
\code{\link[=get_tracer]{get_tracer()}}.}

\item{activation_scope}{The R scope to activate the span for. Defaults
to the called frame.}

\item{end_on_exit}{Whether to also end the span when the activation scope
exits.}
}
\value{
The new OpenTelemetry span object (of class \code{otel_span}),
invisibly. See \link{otel_span} for information about the returned object.
}
\description{
Creates, starts and activates an OpenTelemetry span.
}
\details{
Usually you want this functions instead of [start_local())], which
does not activate the new span.

If \code{end_on_exit} is \code{TRUE} (the default), then it also ends the span
when the activation scope finishes.

[start_local())]: R:start_local())
}
\seealso{
Other OpenTelemetry tracing: 
\code{\link{extract_http_context}()},
\code{\link{get_active_span_context}()},
\code{\link{get_tracer}()},
\code{\link{start_span}()}
}
\concept{OpenTelemetry tracing}
