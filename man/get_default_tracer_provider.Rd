% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defaults.R
\name{get_default_tracer_provider}
\alias{get_default_tracer_provider}
\title{Get the default tracer provider}
\usage{
get_default_tracer_provider()
}
\value{
The default tracer provider, an \code{opentelemetry_tracer_provider}
object.
}
\description{
If there is no default set currently, then it creates and sets a
default.
}
\details{
The default tracer provider is created based on the
R_OTEL_TRACES_EXPORTER environment variable. This
environment variable is specifically for R applications with
OpenTelemetry support.

If this is not set, then the generic OTEL_TRACES_EXPORTER
environment variable is used. This applies to all applications that
support OpenTelemetry and use the OpenTelemetry SDK.

The following values are allowed:
\itemize{
\item \code{none}: no traces are exported.
\item \code{stdout} or \code{console}: uses \link[otelsdk:tracer_provider_stdstream]{otelsdk::tracer_provider_stdstream},
to write traces to the standard output.
\item \code{stderr}: uses \link[otelsdk:tracer_provider_stdstream]{otelsdk::tracer_provider_stdstream}, to write traces
to the standard error.
\item \code{http} or \code{otlp}: uses \link[otelsdk:tracer_provider_http]{otelsdk::tracer_provider_http}, to send
traces through HTTP, using the OpenTelemetry Protocol (OTLP).
\item \verb{<package>::<provider>}: will select the \verb{<provider>} object from
the \verb{<package>} package to use as a trace exporter. It calls
\verb{<package>::<provider>$new()} to create the new traver provider.
If this fails for some reason, e.g. the package is not installed,
then it throws an error.
}
}
