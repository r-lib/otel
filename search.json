[{"path":"https://otel.r-lib.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 otel authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://otel.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer.","code":""},{"path":"https://otel.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). otel: 'OpenTelemetry' R 'API'. R package version 0.1.0, https://otel.r-lib.org.","code":"@Manual{,   title = {otel: 'OpenTelemetry' R 'API'},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 0.1.0},   url = {https://otel.r-lib.org}, }"},{"path":"https://otel.r-lib.org/index.html","id":"otel","dir":"","previous_headings":"","what":"OpenTelemetry R API","title":"OpenTelemetry R API","text":"OpenTelemetry API R packages projects OpenTelemetry observability framework. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data metrics, logs, traces, analysis order understand software’s performance behavior. introduction OpenTelemetry, see OpenTelemetry website docs. learn instrument R code, see Getting Started. project status, installation instructions , read .","code":""},{"path":"https://otel.r-lib.org/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"OpenTelemetry R API","text":"Lightweight packages. otel small R package without dependencies compiled code. otelsdk needs C++11 compiler otel. Minimal performance impact tracing disabled. otel functions evaluate arguments case. Zero-code instrumentation support. Add tracing () functions selected packages automatically. Configuration via environment variables. Minimal extra code. Add tracing function single extra function call. Production mode: otel functions crash production app production mode. Development mode: otel functions error early development mode.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"OpenTelemetry R API","text":"Set otel_tracer_name desired tracer name. (See ?otel_tracer_name.) add otel::start_local_active_span() calls functions want trace: See Getting Started details.","code":"otel_tracer_name <- \"<package-id>\" fn <- function(...) {   spn <- otel::start_local_active_span(\"fn\")   ... }"},{"path":"https://otel.r-lib.org/index.html","id":"the-otel-and-otelsdk-r-packages","dir":"","previous_headings":"","what":"The otel and otelsdk R packages","title":"OpenTelemetry R API","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"reference-documentation","dir":"","previous_headings":"","what":"Reference Documentation","title":"OpenTelemetry R API","text":"otel: https://otel.r-lib.org/reference/ otelsdk: https://otelsdk.r-lib.org/reference/","code":""},{"path":"https://otel.r-lib.org/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"OpenTelemetry R API","text":"current status major functional components OpenTelemetry R follows:","code":""},{"path":"https://otel.r-lib.org/index.html","id":"version-support","dir":"","previous_headings":"","what":"Version support","title":"OpenTelemetry R API","text":"otel otelsdk support R 3.6.0 higher Unix R 4.3.0 higher Windows.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"OpenTelemetry R API","text":"Install otel CRAN: can install development version otel GitHub :","code":"# install.packages(\"pak\") pak::pak(\"otel\") # install.packages(\"pak\") pak::pak(\"r-lib/otel\")"},{"path":"https://otel.r-lib.org/index.html","id":"repositories","dir":"","previous_headings":"","what":"Repositories","title":"OpenTelemetry R API","text":"otel: https://github.com/r-lib/otel otelsdk: https://github.com/r-lib/otelsdk","code":""},{"path":"https://otel.r-lib.org/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"OpenTelemetry R API","text":"MIT © Posit, PBC","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"R objects as OpenTelemetry attributes — as_attributes","title":"R objects as OpenTelemetry attributes — as_attributes","text":"Convert list R objects form suitable OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R objects as OpenTelemetry attributes — as_attributes","text":"","code":"as_attributes(x)"},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R objects as OpenTelemetry attributes — as_attributes","text":"x list R objects, used OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R objects as OpenTelemetry attributes — as_attributes","text":"named list can used attributes argument start_span() method otel_tracer, log() method otel_logger, etc. x named, names empty string NA, integer numbers used missing invalid names. elements x natively supported R types OpenTelemetry (character, logical, double, integer), printed form captured using utils::capture.output().","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"limits","dir":"Reference","previous_headings":"","what":"Limits","title":"R objects as OpenTelemetry attributes — as_attributes","text":"number attributes can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default 128. length attribute (vector) can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default Inf. Note applied length attribute R vector. E.g. currently limit number characters individual strings.","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R objects as OpenTelemetry attributes — as_attributes","text":"","code":"as_attributes(list(   number = 1.0,   vector = 1:10,   string = \"otel\",   string_vector = letters,   object = mtcars )) #> $number #> [1] 1 #>  #> $vector #>  [1]  1  2  3  4  5  6  7  8  9 10 #>  #> $string #> [1] \"otel\" #>  #> $string_vector #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" #> [17] \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" #>  #> $object #>  [1] \"                     mpg cyl  disp  hp drat    wt  qsec vs am gear\" #>  [2] \"Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4\" #>  [3] \"Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4\" #>  [4] \"Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4\" #>  [5] \"Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3\" #>  [6] \"Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3\" #>  [7] \"Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3\" #>  [8] \"Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3\" #>  [9] \"Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4\" #> [10] \"Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4\" #> [11] \"Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4\" #> [12] \"Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4\" #> [13] \"Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3\" #> [14] \"Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3\" #> [15] \"Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3\" #> [16] \"Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3\" #> [17] \"Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3\" #> [18] \"Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3\" #> [19] \"Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4\" #> [20] \"Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4\" #> [21] \"Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4\" #> [22] \"Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3\" #> [23] \"Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3\" #> [24] \"AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3\" #> [25] \"Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3\" #> [26] \"Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3\" #> [27] \"Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4\" #> [28] \"Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5\" #> [29] \"Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5\" #> [30] \"Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5\" #> [31] \"Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5\" #> [32] \"Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5\" #> [33] \"Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4\" #> [34] \"                    carb\"                                           #> [35] \"Mazda RX4              4\"                                           #> [36] \"Mazda RX4 Wag          4\"                                           #> [37] \"Datsun 710             1\"                                           #> [38] \"Hornet 4 Drive         1\"                                           #> [39] \"Hornet Sportabout      2\"                                           #> [40] \"Valiant                1\"                                           #> [41] \"Duster 360             4\"                                           #> [42] \"Merc 240D              2\"                                           #> [43] \"Merc 230               2\"                                           #> [44] \"Merc 280               4\"                                           #> [45] \"Merc 280C              4\"                                           #> [46] \"Merc 450SE             3\"                                           #> [47] \"Merc 450SL             3\"                                           #> [48] \"Merc 450SLC            3\"                                           #> [49] \"Cadillac Fleetwood     4\"                                           #> [50] \"Lincoln Continental    4\"                                           #> [51] \"Chrysler Imperial      4\"                                           #> [52] \"Fiat 128               1\"                                           #> [53] \"Honda Civic            2\"                                           #> [54] \"Toyota Corolla         1\"                                           #> [55] \"Toyota Corona          1\"                                           #> [56] \"Dodge Challenger       2\"                                           #> [57] \"AMC Javelin            2\"                                           #> [58] \"Camaro Z28             4\"                                           #> [59] \"Pontiac Firebird       2\"                                           #> [60] \"Fiat X1-9              1\"                                           #> [61] \"Porsche 914-2          2\"                                           #> [62] \"Lotus Europa           2\"                                           #> [63] \"Ford Pantera L         4\"                                           #> [64] \"Ferrari Dino           6\"                                           #> [65] \"Maserati Bora          8\"                                           #> [66] \"Volvo 142E             2\"                                           #>"},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase an OpenTelemetry counter — counter_add","title":"Increase an OpenTelemetry counter — counter_add","text":"Increase OpenTelemetry counter","code":""},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase an OpenTelemetry counter — counter_add","text":"","code":"counter_add(name, value = 1L, attributes = NULL, context = NULL, meter = NULL)"},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase an OpenTelemetry counter — counter_add","text":"name Name counter. value Value add counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, . meter Meter object (otel_meter). Otherwise passed get_meter() get meter.","code":""},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase an OpenTelemetry counter — counter_add","text":"counter object (otel_counter), invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Increase an OpenTelemetry counter — counter_add","text":"","code":"otel::counter_add(\"total-session-count\", 1)"},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"Exporters, like ones otelsdk package, can use function determine default tracer name, instrumentation author specified one. instrumentation author, probably need call function directly, read learn choosing setting tracer name.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"","code":"default_tracer_name(name = NULL)"},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"name Custom tracer name. NULL otel construct tracer (meter, logger) name according algorithm detailed .","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"list entries: name: supplied auto-detected tracer name. package: Auto-detected package name NA. : Whether tracing enabled package.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"about-tracer-names","dir":"Reference","previous_headings":"","what":"About tracer names","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"name tracer identifies OpenTelemetry instrumentation scope. Instrumentation scopes can used organize collected telemetry data. otel can also use instrumentation scopes suppress emitting unneeded telemetry data, see 'Environment Variables'. otel R package makes sense create separate instrumentation scope R package emits telemetry data. otel can automatically, package author.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"setting-the-tracer-name","dir":"Reference","previous_headings":"","what":"Setting the tracer name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"package author, can define otel_tracer_name symbol package set desired tracer name. example, callr package .R file:   See tips choosing tracer name. like default tracer name, can call get_tracer() (get_logger() get_meter() manually desired name.","code":"otel_tracer_name <- \"org.r-lib.callr\""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"automatic-tracer-name-detection-in-otel","dir":"Reference","previous_headings":"","what":"Automatic tracer name detection in otel","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"detailed algorithm otel uses default_tracer_name: Using base::topenv() finds calling package (top level environment), recursively. ignores otel otelsdk packages searching. finds base environment global environment, returns org.project.R tracer name. Otherwise looks otel_tracer_name symbol inside top level environment found. symbol exists must string scalar otel use tracer name. symbol exist, otel use r.package.<environment-name> tracer name. <environment-name> usually package name.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"choosing-a-tracer-name","dir":"Reference","previous_headings":"","what":"Choosing a tracer name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"OpenTelemetry specification recommends using tracer name identifies instrumentation scope, .e. package. tips choosing tracer name: R package can associated URL, can use \"reverse\" URL. E.g. since callr package's online manual https://callr.r-lib.org, can use org.r-lib.callr. R package belongs company, can use \"reverse\" company URL, possibly additional prefix. E.g. shiny R package Posit, co.posit.r-package.shiny seems like good name. set otel_tracer_name, default_tracer_name use r.package.<package-name> tracer name.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"","code":"default_tracer_name() #> $name #> [1] \"org.r-project.R\" #>  #> $package #> [1] \"R\" #>  #> $on #> [1] TRUE #>"},{"path":"https://otel.r-lib.org/reference/end_span.html","id":null,"dir":"Reference","previous_headings":"","what":"End an OpenTelemetry span — end_span","title":"End an OpenTelemetry span — end_span","text":"Spans created start_local_active_span() end automatically default. must end every span manually, calling end_span, using end_on_exit argument local_active_span() with_active_span().","code":""},{"path":"https://otel.r-lib.org/reference/end_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End an OpenTelemetry span — end_span","text":"","code":"end_span(span)"},{"path":"https://otel.r-lib.org/reference/end_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End an OpenTelemetry span — end_span","text":"span span end.","code":""},{"path":"https://otel.r-lib.org/reference/end_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End an OpenTelemetry span — end_span","text":"Nothing.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/end_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End an OpenTelemetry span — end_span","text":"","code":"fun <- function() {   # start span, do not activate   spn <- otel::start_span(\"myfun\")   # do not leak resources   on.exit(otel::end_span(spn), add = TRUE)   myfun <- function() {      # activate span for this function      otel::local_active_span(spn)      # create child span      spn2 <- otel::start_local_active_span(\"myfun/2\")   }    myfun2 <- function() {     # activate span for this function     otel::local_active_span(spn)     # create child span     spn3 <- otel::start_local_active_span(\"myfun/3\")   }   myfun()   myfun2()   end_span(spn) } fun()"},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables to configure otel — Environment Variables","title":"Environment variables to configure otel — Environment Variables","text":"manual page contains environment variables can use configure otel package. Start 'Selecting exporters' section want produce telemetry data instrumented R package. See also Environment Variables otelsdk package, charge data collection configuration.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment variables to configure otel — Environment Variables","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environment variables to configure otel — Environment Variables","text":"need set environment variables configuring collection telemetry data, unless noted otherwise.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-env","dir":"Reference","previous_headings":"","what":"OTEL_ENV","title":"Environment variables to configure otel — Environment Variables","text":"default otel runs production mode. production mode otel functions never error. Errors telemetry code stop monitored application. behavior ideal development, one prefer catch errors early. Set   run otel development mode, otel functions fail error, make easier fix errors.","code":"OTEL_ENV=dev"},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"selecting-exporters","dir":"Reference","previous_headings":"","what":"Selecting Exporters","title":"Environment variables to configure otel — Environment Variables","text":"otel responsible selecting providers use traces, logs metrics. can use environment variables point otel functions desired providers. none environment variables set, otel emit telemetry data. See otelsdk package configuring selected providers.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-traces-exporter","dir":"Reference","previous_headings":"","what":"OTEL_TRACES_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"name selected tracer provider. See get_default_tracer_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-traces-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_TRACES_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"R specific version OTEL_TRACES_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-logs-exporter","dir":"Reference","previous_headings":"","what":"OTEL_LOGS_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"name selected logger provider. See get_default_logger_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-logs-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_LOGS_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"R specific version OTEL_LOGS_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-metrics-exporter","dir":"Reference","previous_headings":"","what":"OTEL_METRICS_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"name selected meter provider. See get_default_meter_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-metrics-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_METRICS_EXPORTER","title":"Environment variables to configure otel — Environment Variables","text":"R specific version OTEL_METRICS_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"suppressing-instrumentation-scopes-r-packages-","dir":"Reference","previous_headings":"","what":"Suppressing Instrumentation Scopes (R Packages)","title":"Environment variables to configure otel — Environment Variables","text":"otel two environment variables fine tune instrumentation scopes (.e. R packages, typically) emit telemetry data. default, .e. neither set, packages emit telemetry data.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-emit-scopes","dir":"Reference","previous_headings":"","what":"OTEL_R_EMIT_SCOPES","title":"Environment variables to configure otel — Environment Variables","text":"Set environment variable comma separated string instrumentation scope names R package names restrict telemetry packages . name instrumentation scope name tracer, logger meter, see default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_EMIT_SCOPES=\"org.r-lib.*,dplyr\" selects packages instrumentation scope starts org.r-lib. also dplyr.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-suppress-scopes","dir":"Reference","previous_headings":"","what":"OTEL_R_SUPPRESS_SCOPES","title":"Environment variables to configure otel — Environment Variables","text":"Set environment variable comma separated string instrumentation scope names R package names suppress telemetry data packages. name instrumentation scope name tracer, logger meter, see default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_SUPPRESS_SCOPES=\"org.r-lib.*,dplyr\" excludes packages instrumentation scope starts org.r-lib. also dplyr.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"zero-code-instrumentation","dir":"Reference","previous_headings":"","what":"Zero Code Instrumentation","title":"Environment variables to configure otel — Environment Variables","text":"otel can instrument R packages OpenTelemetry data collection without changing source code. relies changing code R functions manually using base::trace() can configured using environment variables.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-instrument-pkgs","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS","title":"Environment variables to configure otel — Environment Variables","text":"Set OTEL_R_INSTRUMENT_PKGS comma separated list packages instrument. automatic instrumentation happens otel package loaded, general best set environment variable loading R.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-instrument-pkgs-lt-pkg-gt-include","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS_<pkg>_INCLUDE","title":"Environment variables to configure otel — Environment Variables","text":"automatically instrumented package, set environment variable instrument subset functions. parsed comma separated string function names, may also include ? * wildcards (globbing).","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-r-instrument-pkgs-lt-pkg-gt-exclude","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS_<pkg>_EXCLUDE","title":"Environment variables to configure otel — Environment Variables","text":"automatically instrumented package, set environment variable exclude functions instrumentation. syntax *_INCLUDE pair. set, inclusion applied exclusion.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-attribute-count-limit","dir":"Reference","previous_headings":"","what":"OTEL_ATTRIBUTE_COUNT_LIMIT","title":"Environment variables to configure otel — Environment Variables","text":"Set environment variable limit number attributes single span, log record, metric measurement, etc. unset, default limit 128 attributes.","code":""},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"otel-attribute-value-length-limit","dir":"Reference","previous_headings":"","what":"OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","title":"Environment variables to configure otel — Environment Variables","text":"Set environment variable limit length vectors attributes single span, log record, metric measurement, etc. unset, limit lengths vectors attributes.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/environmentvariables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables to configure otel — Environment Variables","text":"","code":"# To start an R session using the OTLP exporter: # OTEL_TRACES_EXPORTER=http R -q -f script.R"},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a span context from HTTP headers received from a client — extract_http_context","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"return value can used parent option starting span.","code":""},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"","code":"extract_http_context(headers)"},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"headers named list one two strings: traceparent mandatory, tracestate optional.","code":""},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"otel_span_context object.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"","code":"hdr <- otel::pack_http_context() ctx <- otel::extract_http_context() ctx$is_valid() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry gauge — gauge_record","title":"Record a value of an OpenTelemetry gauge — gauge_record","text":"Record value OpenTelemetry gauge","code":""},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry gauge — gauge_record","text":"","code":"gauge_record(name, value, attributes = NULL, context = NULL, meter = NULL)"},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry gauge — gauge_record","text":"name Name gauge value Value record. attributes Additional attributes add. context Span context. missing active context used, . meter Meter object (otel_meter). Otherwise passed get_meter() get meter.","code":""},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry gauge — gauge_record","text":"gauge object (otel_gauge), invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record a value of an OpenTelemetry gauge — gauge_record","text":"","code":"otel::gauge_record(\"temperature\", 27)"},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the active span context — get_active_span_context","title":"Returns the active span context — get_active_span_context","text":"sometimes useful logs metrics, associate logging metrics reporting traces.","code":""},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the active span context — get_active_span_context","text":"","code":"get_active_span_context()"},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the active span context — get_active_span_context","text":"active span context, otel_span_context object. active span context, invalid span context returned, .e. spc$is_valid() FALSE returned spc.","code":""},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns the active span context — get_active_span_context","text":"Note logs metrics instruments automatically use current span context, often need call function explicitly.","code":""},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the active span context — get_active_span_context","text":"","code":"fun <- function() {   otel::start_local_active_span(\"fun\")   fun2() } fun2 <- function() {   otel::log(\"Log message\", span_context = otel::get_active_span_context()) } fun()"},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default logger provider — get_default_logger_provider","title":"Get the default logger provider — get_default_logger_provider","text":"logger provider defines logs exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default logger provider — get_default_logger_provider","text":"","code":"get_default_logger_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default logger provider — get_default_logger_provider","text":"default logger provider, otel_logger_provider object.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default logger provider — get_default_logger_provider","text":"default set currently, creates sets default. default logger provider created based OTEL_R_LOGS_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_LOGS_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: traces exported. stdout console: uses otelsdk::logger_provider_stdstream, write traces standard output. stderr: uses otelsdk::logger_provider_stdstream, write traces standard error. http otlp: uses otelsdk::logger_provider_http, send traces HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::logger_provider_file write logs JSONL file. <package>::<provider>: select <provider> object <package> package use logger provider. calls <package>::<provider>$new() create new logger provider. fails reason, e.g. package installed, throws error.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the default logger provider — get_default_logger_provider","text":"","code":"get_default_logger_provider() #> <otel_logger_provider_noop/otel_logger_provider> #> methods: #>   get_logger(name, minimum_severity, version, schema_url, attributes) #>   flush()"},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default meter provider — get_default_meter_provider","title":"Get the default meter provider — get_default_meter_provider","text":"meter provider defines metrics exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default meter provider — get_default_meter_provider","text":"","code":"get_default_meter_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default meter provider — get_default_meter_provider","text":"default meter provider, otel_meter_provider object.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default meter provider — get_default_meter_provider","text":"default set currently, creates sets default. default meter provider created based OTEL_R_METRICS_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_METRICS_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: metrics exported. stdout console: uses otelsdk::meter_provider_stdstream, write metrics standard output. stderr: uses otelsdk::meter_provider_stdstream, write metrics standard error. http otlp: uses otelsdk::meter_provider_http, send metrics HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::meter_provider_file write metrics JSONL file. <package>::<provider>: select <provider> object <package> package use meter provider. calls <package>::<provider>$new() create new meter provider. fails reason, e.g. package installed, throws error.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the default meter provider — get_default_meter_provider","text":"","code":"get_default_meter_provider() #> <otel_meter_provider_noop/otel_meter_provider> #> methods: #>   get_meter(name, version, schema_url, attributes) #>   flush(timeout) #>   shutdown(timeout) #>   get_metrics()"},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default tracer provider — get_default_tracer_provider","title":"Get the default tracer provider — get_default_tracer_provider","text":"tracer provider defines traces exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default tracer provider — get_default_tracer_provider","text":"","code":"get_default_tracer_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default tracer provider — get_default_tracer_provider","text":"default tracer provider, otel_tracer_provider object. See otel_tracer_provider methods.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default tracer provider — get_default_tracer_provider","text":"default set currently, creates sets default. default tracer provider created based OTEL_R_TRACES_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_TRACES_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: traces exported. stdout console: uses otelsdk::tracer_provider_stdstream, write traces standard output. stderr: uses otelsdk::tracer_provider_stdstream, write traces standard error. http otlp: uses otelsdk::tracer_provider_http, send traces HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::tracer_provider_file write traces JSONL file. <package>::<provider>: select <provider> object <package> package use tracer provider. calls <package>::<provider>$new() create new tracer provider. fails reason, e.g. package installed, throws error.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the default tracer provider — get_default_tracer_provider","text":"","code":"get_default_tracer_provider() #> <otel_tracer_provider_noop/otel_tracer_provider> #> methods: #>   get_tracer(name, version, schema_url, attributes) #>   flush() #>   get_spans()"},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a logger from the default logger provider — get_logger","title":"Get a logger from the default logger provider — get_logger","text":"Get logger default logger provider","code":""},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a logger from the default logger provider — get_logger","text":"","code":"get_logger(   name = NULL,   minimum_severity = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL,   ...,   provider = NULL )"},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a logger from the default logger provider — get_logger","text":"name Name new tracer. missing, deduced automatically. minimum_severity log level, minimum severity log messages log. See log_severity_levels. version Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url Optional. Specifies Schema URL recorded emitted telemetry. attributes Optional. Specifies instrumentation scope attributes associate emitted telemetry. ... Additional arguments passed get_logger() method provider. provider Tracer provider use. NULL, uses get_default_tracer_provider() get tracer provider.","code":""},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a logger from the default logger provider — get_logger","text":"otel_logger object.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a logger from the default logger provider — get_logger","text":"","code":"myfun <- function() {   lgr <- otel::get_logger()   otel::log(\"Log message\", logger = lgr) } myfun()"},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a meter from the default meter provider — get_meter","title":"Get a meter from the default meter provider — get_meter","text":"Get meter default meter provider","code":""},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a meter from the default meter provider — get_meter","text":"","code":"get_meter(   name = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL,   ...,   provider = NULL )"},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a meter from the default meter provider — get_meter","text":"name Name new tracer. missing, deduced automatically. version Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url Optional. Specifies Schema URL recorded emitted telemetry. attributes Optional. Specifies instrumentation scope attributes associate emitted telemetry. ... Additional arguments passed get_meter() method provider. provider Meter provider use. NULL, uses get_default_meter_provider() get tracer provider.","code":""},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a meter from the default meter provider — get_meter","text":"otel_meter object.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a meter from the default meter provider — get_meter","text":"","code":"myfun <- function() {   mtr <- otel::get_meter()   ctr <- mtr$create_counter(\"session-count\")   ctr$add(1) } myfun()"},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tracer from the default tracer provider — get_tracer","title":"Get a tracer from the default tracer provider — get_tracer","text":"Calls get_default_tracer_provider() get default tracer provider. calls $get_tracer() method create new tracer.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tracer from the default tracer provider — get_tracer","text":"","code":"get_tracer(   name = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL,   ...,   provider = NULL )"},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tracer from the default tracer provider — get_tracer","text":"name Name new tracer. missing, deduced automatically using default_tracer_name(). Make sure read manual page default_tracer_name() using argument. version Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url Optional. Specifies Schema URL recorded emitted telemetry. attributes Optional. Specifies instrumentation scope attributes associate emitted telemetry. ... Additional arguments passed get_tracer() method provider. provider Tracer provider use. NULL, uses get_default_tracer_provider() get tracer provider.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tracer from the default tracer provider — get_tracer","text":"OpenTelemetry tracer, otel_tracer object.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a tracer from the default tracer provider — get_tracer","text":"Usually need call function directly, start_local_active_span() calls . Calling get_tracer() multiple times name (auto-deduced name) return (internal) tracer object. (Even R external pointer objects representing different.) tracer deleted tracer provider deleted garbage collected.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a tracer from the default tracer provider — get_tracer","text":"","code":"myfun <- function() {   trc <- otel::get_tracer()   spn <- trc$start_span()   on.exit(otel::end_span(spn), add = TRUE)   otel::local_active_span(spn, end_on_exit = TRUE) } myfun()"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting Started — Getting Started","title":"Getting Started — Getting Started","text":"page instrumenting R package project OpenTelemetry. want start collecting OpenTelemetry data instrumented packages, see Collecting Telemetry Data otelsdk package.","code":""},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"about-opentelemetry","dir":"Reference","previous_headings":"","what":"About OpenTelemetry","title":"Getting Started — Getting Started","text":"OpenTelemetry observability framework. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data metrics, logs, traces, analysis order understand software’s performance behavior. introduction OpenTelemetry, see OpenTelemetry website docs.","code":""},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"the-otel-and-otelsdk-r-packages","dir":"Reference","previous_headings":"","what":"The otel and otelsdk R packages","title":"Getting Started — Getting Started","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"complete-example","dir":"Reference","previous_headings":"","what":"Complete Example","title":"Getting Started — Getting Started","text":"instrument package otel, need couple steps. section show instrument callr package.","code":""},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"add-the-otel-package-as-a-dependency","dir":"Reference","previous_headings":"","what":"Add the otel package as a dependency","title":"Getting Started — Getting Started","text":"first step add otel package dependency. otel lightweight package, may want add hard dependency. advantage need check otel installed every time call otel function. Add otel Imports section DESCRIPTION:   Alternatively, may add otel soft dependency. Add otel Suggests section DESCRIPTION:   add otel Suggests, makes sense create helper function checks otel installed also tracing enabled caller. can put function R file, e.g. R/utils.R nice place :","code":"Imports:     otel Suggests:     otel is_otel_tracing <- function() {   requireNamespace(\"otel\", quietly = TRUE) && otel::is_tracing_enabled() }"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"choose-a-tracer-name","dir":"Reference","previous_headings":"","what":"Choose a tracer name","title":"Getting Started — Getting Started","text":"Every package tracer name unique package. See default_tracer_name() tips choosing good tracer name. Set otel_tracer_name variable tracer name. need export symbol. callr, add   R/callr-package.R file.","code":"otel_tracer_name <- \"org.r-lib.callr\""},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"create-spans-for-selected-functions","dir":"Reference","previous_headings":"","what":"Create spans for selected functions","title":"Getting Started — Getting Started","text":"Select functions want add tracing . overkill add tracing small functions called lots times. makes sense add spans main functions package. callr package various ways starting another R process running R code . add tracing callr::r() callr::rcmd() callr::rscript() functions first. add callr::r() eval.R:   use is_otel_tracing() helper function, defined . start_local_active_span() starts span also activates . also sets exit handler ends span caller function (callr::r()) exits. options contain long list user-provided option, add span attributes. add essentially code callr::rcmd():   callr::rscript():","code":"if (is_otel_tracing()) {     otel::start_local_active_span(       \"callr::r\",       attributes = otel::as_attributes(options)     )   } if (is_otel_tracing()) {     otel::start_local_active_span(       \"callr::rcmd\",       attributes = otel::as_attributes(options)     )   } if (is_otel_tracing()) {     otel::start_local_active_span(       \"callr::rscript\",       attributes = otel::as_attributes(options)     )   }"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"concurrency","dir":"Reference","previous_headings":"","what":"Concurrency","title":"Getting Started — Getting Started","text":"instance callr::r_session R6 class represents persistent R background processes. want collect spans R process trace. Since R processes running concurrently, (sub)spans form correct hierarchy use default, timing-based otel mechanism organize spans trees. need manage lifetime activation spans represent R processes manually. generic strategy handling concurrency otel : Create new long lasting span start_span(). (.e. start_local_active_span()!) Assign returned span corresponding object concurrent /asynchronous computation. Every span finalizer closes span. running code belongs concurrent computation represented span, activate specific R scope calling with_active_span() local_active_span(). concurrent computation ends, close span manually $end() method end_span(). (Otherwise closed next garbage collection, assuming references .) code goes constructor r_session object:   finalize() method (finalizer) gets call close span:   also add (sub)spans operations, e.g. read() method gets","code":"if (is_otel_tracing()) {     private$options$otel_session <- otel::start_span(       \"callr::r_session\",       attributes = otel::as_attributes(options)     )   } if (is_otel_tracing()) {     private$options$otel_session$end()   } if (is_otel_tracing()) {     otel::local_session(private$options$otel_session)     spn <- otel::start_local_active_span(\"callr::r_session$read\")   }"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Getting Started — Getting Started","text":"test instrumentation, need install otelsdk package also need local remote OpenTelemetry collector. suggest use otel-tui, terminal OpenTelemetry viewer. configure , use http exporter, see Environment Variables:","code":"OTEL_TRACES_EXPORTER=http R -q"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"development-mode","dir":"Reference","previous_headings":"","what":"Development mode","title":"Getting Started — Getting Started","text":"default otel functions never error, avoid taking production app. development ideal, want catch errors early. suggest always turn development mode instrumenting package:","code":"OTEL_ENV=dev"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"context-propagation","dir":"Reference","previous_headings":"","what":"Context propagation","title":"Getting Started — Getting Started","text":"OpenTelemetry supports distributed tracing. span (context) can serialized, copied another process, can used create child spans. applications communicating via HTTP serialized span context transmitted HTTP headers. callr example can copy context R subprocess environment variables. example callr:r() code may write:   options$env contains environment variables callr set newly started R process. need add output pack_http_context(), contains serialized representation active span, . Additionally, subprocess needs pick span context environment variables. callr:::common_hook() internal function contains code subprocess runs startup. need add:   First check TRACEPARENT environment variable set. contains serialization parent span. exists otel package also available, extract span context environment variables, start new span child span remote span obtained environment variables. also set finalizer closes span R process terminates.","code":"if (is_otel_tracing()) {     otel::start_local_active_span(       \"callr::r\",       attributes = otel::as_attributes(options)     )     hdrs <- otel::pack_http_context()     names(hdrs) <- toupper(names(hdrs))     options$env[names(hdrs)] <- hdrs   } has_otel <- nzchar(Sys.getenv(\"TRACEPARENT\")) &&         requireNamespace(\"otel\", quietly = TRUE)       assign(envir = env$`__callr_data__`, \"has_otel\", has_otel)       if (has_otel) {         hdrs <- as.list(c(           traceparent = Sys.getenv(\"TRACEPARENT\"),           tracestate = Sys.getenv(\"TRACESTATE\"),           baggage = Sys.getenv(\"BAGGAGE\")         ))         prtctx <- otel::extract_http_context(hdrs)         reg.finalizer(           env$`__callr_data__`,           function(e) e$otel_span$end(),           onexit = TRUE         )         assign(           envir = env$`__callr_data__`,           \"otel_span\",           otel::start_span(             \"callr subprocess\",             options = list(parent = prtctx)           )         )       }"},{"path":"https://otel.r-lib.org/reference/gettingstarted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting Started — Getting Started","text":"","code":"# See above"},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry histogram — histogram_record","title":"Record a value of an OpenTelemetry histogram — histogram_record","text":"Record value OpenTelemetry histogram","code":""},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry histogram — histogram_record","text":"","code":"histogram_record(name, value, attributes = NULL, context = NULL, meter = NULL)"},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry histogram — histogram_record","text":"name Name histogram. value Value record. attributes Additional attributes add. context Span context. missing active context used, . meter Meter object (otel_meter). Otherwise passed get_meter() get meter.","code":""},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry histogram — histogram_record","text":"histogram object (otel_histogram), invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record a value of an OpenTelemetry histogram — histogram_record","text":"","code":"otel::histogram_record(\"response-time\", 0.2)"},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry logging is active — is_logging_enabled","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"useful avoiding computation logging inactive.","code":""},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"","code":"is_logging_enabled(severity = \"info\", logger = NULL)"},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"severity Check logs emitted severity level. logger Logger object (otel_logger), logger name, instrumentation scope, pass get_logger().","code":""},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"TRUE OpenTelemetry logging active, FALSE otherwise.","code":""},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"calls get_logger() name calls logger's $is_enabled() method.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_logging_enabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether OpenTelemetry logging is active — is_logging_enabled","text":"","code":"fun <- function() {   if (otel::is_logging_enabled()) {     xattr <- calculate_some_extra_attributes()     otel::log(\"Starting fun\", attributes = xattr)   }   # ... }"},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"useful avoiding computation metrics collection inactive.","code":""},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"","code":"is_measuring_enabled(meter = NULL)"},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"meter Meter object (otel_meter), meter name, instrumentation scope, pass get_meter().","code":""},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"TRUE OpenTelemetry metrics collection  active, FALSE otherwise.","code":""},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"calls get_meter() name calls meter's $is_enabled() method.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_measuring_enabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether OpenTelemetry metrics collection is active — is_measuring_enabled","text":"","code":"fun <- function() {   if (otel::is_measuring_enabled()) {     xattr <- calculate_some_extra_attributes()     otel::counter_add(\"sessions\", 1, attributes = xattr)   }   # ... }"},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if tracing is active — is_tracing_enabled","title":"Check if tracing is active — is_tracing_enabled","text":"Checks whether OpenTelemetry tracing active. can useful avoid unnecessary computation tracing inactive.","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if tracing is active — is_tracing_enabled","text":"","code":"is_tracing_enabled(tracer = NULL)"},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if tracing is active — is_tracing_enabled","text":"tracer Tracer object (otel_tracer). can also tracer name, instrumentation scope, NULL determining tracer name automatically. Passed get_tracer() tracer object.","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if tracing is active — is_tracing_enabled","text":"TRUE OpenTelemetry tracing active, FALSE otherwise.","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if tracing is active — is_tracing_enabled","text":"calls get_tracer() name calls tracer's $is_enabled() method.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_tracing_enabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if tracing is active — is_tracing_enabled","text":"","code":"fun <- function() {   if (otel::is_tracing_enabled()) {     xattr <- calculate_some_extra_attributes()     otel::start_local_active_span(\"fun\", attributes = xattr)   }   # ... }"},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate an OpenTelemetry span for an R scope — local_active_span","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"Activates span caller () frame. Usually need function spans created start_span(), activate new span. Usually need spans created start_local_active_span(), activates new span automatically.","code":""},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"","code":"local_active_span(span, end_on_exit = FALSE, activation_scope = parent.frame())"},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"span OpenTelemetry span activate. end_on_exit Whether end span exiting activation scope. activation_scope scope activate span , defaults caller frame.","code":""},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"Nothing.","code":""},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"frame ends, span deactivated previously active span active , . possible activate span multiple R frames.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"","code":"fun <- function() {   # start span, do not activate   spn <- otel::start_span(\"myfun\")   # do not leak resources   on.exit(otel::end_span(spn), add = TRUE)   myfun <- function() {      # activate span for this function      otel::local_active_span(spn)      # create child span      spn2 <- otel::start_local_active_span(\"myfun/2\")   }    myfun2 <- function() {     # activate span for this function     otel::local_active_span(spn)     # create child span     spn3 <- otel::start_local_active_span(\"myfun/3\")   }   myfun()   myfun2()   end_span(spn) } fun()"},{"path":"https://otel.r-lib.org/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Log an OpenTelemetry log message — log","title":"Log an OpenTelemetry log message — log","text":"Log OpenTelemetry log message","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log an OpenTelemetry log message — log","text":"","code":"log(msg, ..., severity = \"info\", .envir = parent.frame(), logger = NULL)  log_trace(msg, ..., .envir = parent.frame(), logger = NULL)  log_debug(msg, ..., .envir = parent.frame(), logger = NULL)  log_info(msg, ..., .envir = parent.frame(), logger = NULL)  log_warn(msg, ..., .envir = parent.frame(), logger = NULL)  log_error(msg, ..., .envir = parent.frame(), logger = NULL)  log_fatal(msg, ..., .envir = parent.frame(), logger = NULL)"},{"path":"https://otel.r-lib.org/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log an OpenTelemetry log message — log","text":"msg Log message, may contain R expressions evaluate within braces. ... Additional arguments passed $log() method logger. severity Log severity, string, one \"trace\", \"trace2\", \"trace3\", \"trace4\", \"debug\", \"debug2\", \"debug3\", \"debug4\", \"info\", \"info2\", \"info3\", \"info4\", \"warn\", \"warn2\", \"warn3\", \"warn4\", \"error\", \"error2\", \"error3\", \"error4\", \"fatal\", \"fatal2\", \"fatal3\", \"fatal4\". .envir Environment evaluate interpolated expressions log message . logger Logger use. OpenTelemetry logger object (otel_logger), passed get_logger() get logger.","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log an OpenTelemetry log message — log","text":"logger, invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log an OpenTelemetry log message — log","text":"log_trace() log() severity_level \"trace\". log_debug() log() severity_level \"debug\". log_info() log() severity_level \"info\". log_warn() log() severity_level \"warn\". log_error) log() severity_level \"error\". log_fatal() log() severity_level \"fatal\".","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log an OpenTelemetry log message — log","text":"","code":"host <- \"my.db.host\" port <- 6667 otel::log(\"Connecting to database at {host}:{port}\")"},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry log severity levels — log_severity_levels","title":"OpenTelemetry log severity levels — log_severity_levels","text":"named integer vector, severity levels numeric form. names severity levels text form. otel functions accept forms severity levels, text form readable.","code":""},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry log severity levels — log_severity_levels","text":"applicable.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry log severity levels — log_severity_levels","text":"","code":"log_severity_levels #>  trace trace2 trace3 trace4  debug debug2 debug3 debug4   info  info2  #>      1      2      3      4      5      6      7      8      9     10  #>  info3  info4   warn  warn2  warn3  warn4  error error2 error3 error4  #>     11     12     13     14     15     16     17     18     19     20  #>  fatal fatal2 fatal3 fatal4  #>     21     22     23     24"},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op logger provider — logger_provider_noop","title":"No-op logger provider — logger_provider_noop","text":"logger provider (otel_logger_provider) otel uses logging disabled.","code":""},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No-op logger provider — logger_provider_noop","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"No-op logger provider — logger_provider_noop","text":"methods -ops return objects also -ops.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"No-op logger provider — logger_provider_noop","text":"","code":"logger_provider_noop$new() #> <otel_logger_provider_noop/otel_logger_provider> #> methods: #>   get_logger(name, minimum_severity, version, schema_url, attributes) #>   flush()"},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op Meter Provider — meter_provider_noop","title":"No-op Meter Provider — meter_provider_noop","text":"meter provider (otel_meter_provider) otel uses metrics collection disabled.","code":""},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No-op Meter Provider — meter_provider_noop","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"No-op Meter Provider — meter_provider_noop","text":"methods -ops return objects also -ops.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"No-op Meter Provider — meter_provider_noop","text":"","code":"meter_provider_noop$new() #> <otel_meter_provider_noop/otel_meter_provider> #> methods: #>   get_meter(name, version, schema_url, attributes) #>   flush(timeout) #>   shutdown(timeout) #>   get_metrics()"},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Counter Object — otel_counter","title":"OpenTelemetry Counter Object — otel_counter","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Counter Object — otel_counter","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Counter Object — otel_counter","text":"Usually need deal otel_counter objects directly. counter_add() automatically sets meter creates counter instrument, needed. counter object created calling create_counter() method otel_meter_provider(). can use add() method increment counter positive amount. R counters represented double values.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"counter-add-","dir":"Reference","previous_headings":"","what":"counter$add()","title":"OpenTelemetry Counter Object — otel_counter","text":"Increment counter fixed amount.","code":""},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Counter Object — otel_counter","text":"","code":"counter$add(value, attributes = NULL, span_context = NULL, ...)"},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Counter Object — otel_counter","text":"value: Value increment counter . attributes: Additional attributes add. span_context: Span context. missing, active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Counter Object — otel_counter","text":"counter object , invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_counter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Counter Object — otel_counter","text":"","code":"mp <- get_default_meter_provider() mtr <- mp$get_meter() ctr <- mtr$create_counter(\"session\") ctr$add(1)"},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Gauge Object — otel_gauge","title":"OpenTelemetry Gauge Object — otel_gauge","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Gauge Object — otel_gauge","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Gauge Object — otel_gauge","text":"Usually need deal otel_gauge objects directly. gauge_record() automatically sets meter creates gauge instrument, needed. gauge object created calling create_gauge() method otel_meter_provider(). can use record() method record current value. R gauge values represented doubles.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"gauge-record-","dir":"Reference","previous_headings":"","what":"gauge$record()","title":"OpenTelemetry Gauge Object — otel_gauge","text":"Update statistics specified amount.","code":""},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Gauge Object — otel_gauge","text":"","code":"gauge$record(value, attributes = NULL, span_context = NULL, ...)"},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Gauge Object — otel_gauge","text":"value: numeric value. current absolute value. attributes: Additional attributes add. span_context: Span context. missing, active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Gauge Object — otel_gauge","text":"gauge object , invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_gauge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Gauge Object — otel_gauge","text":"","code":"mp <- get_default_meter_provider() mtr <- mp$get_meter() gge <- mtr$create_gauge(\"response-time\") gge$record(1.123)"},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Histogram Object — otel_histogram","title":"OpenTelemetry Histogram Object — otel_histogram","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Histogram Object — otel_histogram","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Histogram Object — otel_histogram","text":"Usually need deal otel_histogram objects directly. histogram_record() automatically sets meter creates histogram instrument, needed. histogram object created calling create_histogram() method otel_meter_provider(). can use record() method update statistics specified amount. R histogram values represented doubles.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"histogram-record-","dir":"Reference","previous_headings":"","what":"histogram$record()","title":"OpenTelemetry Histogram Object — otel_histogram","text":"Update statistics specified amount.","code":""},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Histogram Object — otel_histogram","text":"","code":"histogram$record(value, attributes = NULL, span_context = NULL, ...)"},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Histogram Object — otel_histogram","text":"value: numeric value record. attributes: Additional attributes add. span_context: Span context. missing, active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Histogram Object — otel_histogram","text":"histogram object , invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Histogram Object — otel_histogram","text":"","code":"mp <- get_default_meter_provider() mtr <- mp$get_meter() hst <- mtr$create_histogram(\"response-time\") hst$record(1.123)"},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Logger Object — otel_logger","title":"OpenTelemetry Logger Object — otel_logger","text":"otel_logger_provider -> otel_logger","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Object — otel_logger","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Logger Object — otel_logger","text":"Usually need deal otel_logger objects directly. log() automatically sets logger emitting logs. logger object created calling get_logger() method otel_logger_provider. can use log() method logger object emit logs. Typically separate logger object instrumented R package.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-is-enabled-","dir":"Reference","previous_headings":"","what":"logger$is_enabled()","title":"OpenTelemetry Logger Object — otel_logger","text":"Whether logger active emitting logs certain severity level. equivalent is_logging_enabled() function.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Object — otel_logger","text":"","code":"logger$is_enabled(severity = \"info\", event_id = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Logger Object — otel_logger","text":"severity: Check logs emitted severity level. event_id: implemented yet.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Object — otel_logger","text":"Logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-get-minimum-severity-","dir":"Reference","previous_headings":"","what":"logger$get_minimum_severity()","title":"OpenTelemetry Logger Object — otel_logger","text":"Get current minimum severity logger emitting logs.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Object — otel_logger","text":"","code":"logger_get_minimum_severity()"},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Object — otel_logger","text":"Named integer scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-set-minimum-severiry-","dir":"Reference","previous_headings":"","what":"logger$set_minimum_severiry()","title":"OpenTelemetry Logger Object — otel_logger","text":"Set minimum severity emitting logs.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Object — otel_logger","text":"","code":"logger$set_minimum_severity(minimum_severity)"},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Logger Object — otel_logger","text":"minimum_severity: Log severity, string, one \"trace\", \"trace2\", \"trace3\", \"trace4\", \"debug\", \"debug2\", \"debug3\", \"debug4\", \"info\", \"info2\", \"info3\", \"info4\", \"warn\", \"warn2\", \"warn3\", \"warn4\", \"error\", \"error2\", \"error3\", \"error4\", \"fatal\", \"fatal2\", \"fatal3\", \"fatal4\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Object — otel_logger","text":"Nothing.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-log-","dir":"Reference","previous_headings":"","what":"logger$log()","title":"OpenTelemetry Logger Object — otel_logger","text":"Log OpenTelemetry log message.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Object — otel_logger","text":"","code":"logger$log(   msg = \"\",   severity = \"info\",   span_context = NULL,   span_id = NULL,   trace_id = NULL,   trace_flags = NULL,   timestamp = SYs.time(),   observed_timestamp = NULL,   attributes = NULL,   .envir = parent.frame() )"},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Logger Object — otel_logger","text":"msg: Log message, may contain R expressions evaluate within braces. severity: Log severity, string, one \"trace\", \"trace2\", \"trace3\", \"trace4\", \"debug\", \"debug2\", \"debug3\", \"debug4\", \"info\", \"info2\", \"info3\", \"info4\", \"warn\", \"warn2\", \"warn3\", \"warn4\", \"error\", \"error2\", \"error3\", \"error4\", \"fatal\", \"fatal2\", \"fatal3\", \"fatal4\". span_context: otel_span_context object associate log message span. span_id: Alternatively span_context, can also specify span_id, trace_id trace_flags associate log message span. trace_id: Alternatively span_context, can also specify span_id, trace_id trace_flags associate log message span. trace_flags: Alternatively span_context, can also specify span_id, trace_id trace_flags associate log message span. timestamp: Time stamp, defaults current time. time logged event occurred. observed_timestamp: Observed time stamp, time event observed. attributes: Optional attributes, see as_attributes() possible values. .envir: Environment evaluate interpolated expressions log message . `","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"value-4","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Object — otel_logger","text":"logger object, invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-trace-","dir":"Reference","previous_headings":"","what":"logger$trace()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"trace\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-debug-","dir":"Reference","previous_headings":"","what":"logger$debug()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"debug\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-info-","dir":"Reference","previous_headings":"","what":"logger$info()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"info\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-warn-","dir":"Reference","previous_headings":"","what":"logger$warn()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"warn\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-error-","dir":"Reference","previous_headings":"","what":"logger$error()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"error\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"logger-fatal-","dir":"Reference","previous_headings":"","what":"logger$fatal()","title":"OpenTelemetry Logger Object — otel_logger","text":"logger$log(), severity = \"fatal\".","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Logger Object — otel_logger","text":"","code":"lp <- get_default_logger_provider() lgr <- lp$get_logger() platform <- utils::sessionInfo()$platform lgr$log(\"This is a log message from {platform}.\", severity = \"trace\")"},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Logger Provider Object — otel_logger_provider","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"otel_logger_provider -> otel_logger","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"logger provider defines logs exported collecting telemetry data. unlikely need use logger provider objects directly. Usually single logger provider R app script. Typically logger provider created automatically, first log() call. otel decides logger provider class use based Environment Variables.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"implementations","dir":"Reference","previous_headings":"","what":"Implementations","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"Note list updated manually may incomplete. logger_provider_noop: -op logger provider, used logs emitted. otelsdk::logger_provider_file: Save logs JSONL file. otelsdk::logger_provider_http: Send logs collector HTTP/OTLP. otelsdk::logger_provider_stdstream: Write logs standard output error file. Primarily debugging.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"logger-provider-get-logger-","dir":"Reference","previous_headings":"","what":"logger_provider$get_logger()","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"Get create new logger object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"","code":"logger_provider$get_logger(  name = NULL,  version = NULL,  schema_url = NULL,  attributes = NULL )"},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"name Logger name. makes sense reuse tracer name logger name. See get_logger() default_tracer_name(). version: Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url: Optional. Specifies Schema URL recorded emitted telemetry. attributes: Optional. Specifies instrumentation scope attributes associate emitted telemetry. See as_attributes() allowed values. can also use as_attributes() convert R objects OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"OpenTelemetry logger (otel_logger) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"see-also","dir":"Reference","previous_headings":"","what":"See also","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"get_default_logger_provider(), get_logger().","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"logger-provider-flush-","dir":"Reference","previous_headings":"","what":"logger_provider$flush()","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"Force buffered logs flush. Logger providers might implement method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"","code":"logger_provider$flush()"},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"Nothing.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_logger_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Logger Provider Object — otel_logger_provider","text":"","code":"lp <- otel::get_default_logger_provider() lgr <- lp$get_logger() lgr$is_enabled() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Meter Object — otel_meter","title":"OpenTelemetry Meter Object — otel_meter","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Meter Object — otel_meter","text":"Usually need deal otel_meter objects directly. counter_add(), up_down_counter_add(), histogram_record() gauge_record() automatically set meter uses create instruments. meter object created calling get_meter() method otel_meter_provider. can use create_counter(), create_up_down_counter(), create_histogram(), create_gauge() methods meter object create instruments. Typically separate meter object instrumented R package.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"meter-is-enabled-","dir":"Reference","previous_headings":"","what":"meter$is_enabled()","title":"OpenTelemetry Meter Object — otel_meter","text":"Whether meter active emitting measurements. equivalent is_measuring_enabled() function.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"meter$is_enabled()"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"Logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"meter-create-counter-","dir":"Reference","previous_headings":"","what":"meter$create_counter()","title":"OpenTelemetry Meter Object — otel_meter","text":"Create new counter instrument.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"create_counter(name, description = NULL, unit = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Meter Object — otel_meter","text":"name: Name instrument. description: Optional description. unit: Optional measurement unit. specified, use units Unified Code Units Measure, according OpenTelemetry semantic conventions.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"OpenTelemetry counter (otel_counter) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"meter-create-up-down-counter-","dir":"Reference","previous_headings":"","what":"meter$create_up_down_counter()","title":"OpenTelemetry Meter Object — otel_meter","text":"Create new -counter instrument.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"create_up_down_counter(name, description = NULL, unit = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Meter Object — otel_meter","text":"name: Name instrument. description: Optional description. unit: Optional measurement unit. specified, use units Unified Code Units Measure, according OpenTelemetry semantic conventions.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"OpenTelemetry counter (otel_up_down_counter) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"meter-create-histogram-","dir":"Reference","previous_headings":"","what":"meter$create_histogram()","title":"OpenTelemetry Meter Object — otel_meter","text":"Create new histogram.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"create_histogram(name, description = NULL, unit = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Meter Object — otel_meter","text":"name: Name instrument. description: Optional description. unit: Optional measurement unit. specified, use units Unified Code Units Measure, according OpenTelemetry semantic conventions.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value-4","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"OpenTelemetry histogram (otel_histogram) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"meter-create-gauge-","dir":"Reference","previous_headings":"","what":"meter$create_gauge()","title":"OpenTelemetry Meter Object — otel_meter","text":"Create new gauge.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"create_gauge(name, description = NULL, unit = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Meter Object — otel_meter","text":"name: Name instrument. description: Optional description. unit: Optional measurement unit. specified, use units Unified Code Units Measure, according OpenTelemetry semantic conventions.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"value-5","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Meter Object — otel_meter","text":"OpenTelemetry gauge (otel_gauge) object.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_meter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Meter Object — otel_meter","text":"","code":"mp <- get_default_meter_provider() mtr <- mp$get_meter() ctr <- mtr$create_counter(\"session\") ctr$add(1)"},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry meter provider objects — otel_meter_provider","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"meter provider defines metrics exported collecting telemetry data. unlikely need use meter provider objects directly. Usually single meter provider R app script. Typically meter provider created automatically, first counter_add(), up_down_counter_add(), histogram_record(), gauge_record() get_meter() call. otel decides meter provider class use based Environment Variables.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"implementations","dir":"Reference","previous_headings":"","what":"Implementations","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Note list updated manually may incomplete. meter_provider_noop: -op meter provider, used metrics emitted. otelsdk::meter_provider_file: Save metrics JSONL file. otelsdk::meter_provider_http: Send metrics collector HTTP/OTLP. otelsdk::meter_provider_memory: Collect emitted metrics memory. testing. otelsdk::meter_provider_stdstream: Write metrics standard output error file. Primarily debugging.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"meter-provider-get-meter-","dir":"Reference","previous_headings":"","what":"meter_provider$get_meter()","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Get create new meter object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"","code":"meter_provider$get_meter(   name = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL )"},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"name: Meter name, see get_meter(). version: Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url: Optional. Specifies Schema URL recorded emitted telemetry. attributes: Optional. Specifies instrumentation scope attributes associate emitted telemetry. See as_attributes() allowed values. can also use as_attributes() convert R objects OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Returns OpenTelemetry meter (otel_meter) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"see-also","dir":"Reference","previous_headings":"","what":"See also","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"get_default_meter_provider(), get_meter().","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"meter-provider-flush-","dir":"Reference","previous_headings":"","what":"meter_provider$flush()","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Force buffered metrics flush. Meter providers might implement method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"","code":"meter_provider$flush()"},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Nothing.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"meter-provider-shutdown-","dir":"Reference","previous_headings":"","what":"meter_provider$shutdown()","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Stop meter provider. Stops collecting emitting measurements.","code":""},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"","code":"meter_provider$shurdown()"},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"Nothing","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_meter_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry meter provider objects — otel_meter_provider","text":"","code":"mp <- otel::get_default_meter_provider() mtr <- mp$get_meter() mtr$is_enabled() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Span Object — otel_span","title":"OpenTelemetry Span Object — otel_span","text":"otel_tracer_provider -> otel_tracer -> otel_span -> otel_span_context","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Span Object — otel_span","text":"otel_span object represents OpenTelemetry span. Use start_local_active_span() start_span() create start span. Call end_span() end span explicitly. (See start_local_active_span() local_active_span() end span automatically.)","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"lifetime","dir":"Reference","previous_headings":"","what":"Lifetime","title":"OpenTelemetry Span Object — otel_span","text":"span starts created start_local_active_span() start_span() call. span ends end_span() called , explicitly automatically via start_local_active_span() local_active_span().","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"activation","dir":"Reference","previous_headings":"","what":"Activation","title":"OpenTelemetry Span Object — otel_span","text":"span created may active inactively, independently lifetime. live span (.e. span ended yet) may inactive. less common, span ended may still active. otel creates new span, sets parent span new span active span default.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"automatic-spans","dir":"Reference","previous_headings":"","what":"Automatic spans","title":"OpenTelemetry Span Object — otel_span","text":"start_local_active_span() creates new span, starts activates caller frame. also automatically ends span caller frame exits.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"manual-spans","dir":"Reference","previous_headings":"","what":"Manual spans","title":"OpenTelemetry Span Object — otel_span","text":"start_span() creates new span starts , activate . must activate span manually using local_active_span() with_active_span(). must also end span manually end_span() call. (end_on_exit argument local_active_span() with_active_span().)","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"parent-spans","dir":"Reference","previous_headings":"","what":"Parent spans","title":"OpenTelemetry Span Object — otel_span","text":"OpenTelemetry spans form hierarchy: span can refer parent span. span without parent span called root span. trace set connected spans. otel creates new span, sets parent span new span active span default. Alternatively, can set parent span new span manually. can also make new span root span, setting parent = NA options start_local_active_span() start_span() call.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-add-event-","dir":"Reference","previous_headings":"","what":"span$add_event()","title":"OpenTelemetry Span Object — otel_span","text":"Add single event span.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$add_event(name, attributes = NULL, timestamp = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"name: Event name. attributes: Attributes add event. See as_attributes() supported R types. may also use as_attributes() convert R object OpenTelemetry attribute value. timestamp: base::POSIXct object. missing, current time used.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span object , invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-end-","dir":"Reference","previous_headings":"","what":"span$end()","title":"OpenTelemetry Span Object — otel_span","text":"End span. Calling method equivalent calling end_span() function span. Spans created start_local_active_span() end automatically default. must end every span manually, calling end_span, using end_on_exit argument local_active_span() with_active_span(). Calling span$end() method (end_span()) span multiple times error, first call ends span, subsequent calls nothing.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$end(options = NULL, status_code = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"options: Named list options. Possible entry: end_steady_time: base::POSIXct object used steady timer. status_code: Span status code set ending span, see span$set_status() method possible values.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span object , invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-get-context-","dir":"Reference","previous_headings":"","what":"span$get_context()","title":"OpenTelemetry Span Object — otel_span","text":"Get span's span context. span context otel_span_context object can serialized, copied processes, can used create new child spans.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$get_context()"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"otel_span_context object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-is-recording-","dir":"Reference","previous_headings":"","what":"span$is_recording()","title":"OpenTelemetry Span Object — otel_span","text":"Checks whether span recorded. tracing , span ended already, sampler decided record trace span belongs .","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$is_recording()"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-4","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"logical scalar, TRUE span recorded.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-record-exception-","dir":"Reference","previous_headings":"","what":"span$record_exception()","title":"OpenTelemetry Span Object — otel_span","text":"Record exception (error, usually) event span. span created start_local_active_span(), ended automatically local_active_span() with_active_span(), otel records exceptions automatically, need call function manually. can still use record exceptions R errors.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$record_exception(error_condition, attributes, ...)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"error_condition: R error object record. attributes: Additional attributes add exception event. ...: Passed span$add_event() method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-5","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span object , invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-set-attribute-","dir":"Reference","previous_headings":"","what":"span$set_attribute()","title":"OpenTelemetry Span Object — otel_span","text":"Set single attribute. better set attributes span creation, instead calling method later, since samplers can make decisions based attributes present span creation.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$set_attribute(name, value)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"name: Attribute name. value: Attribute value. See as_attributes() supported R types. may also use as_attributes() convert R object OpenTelemetry attribute value.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-6","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span object , invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-set-status-","dir":"Reference","previous_headings":"","what":"span$set_status()","title":"OpenTelemetry Span Object — otel_span","text":"Set status span. span created start_local_active_span(), ended automatically local_active_span() with_active_span(), otel sets status span automatically ok error, depending whether error happened frame span activated . Otherwise default span status unset, need set manually.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$set_status(status_code, description = NULL)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"status_code: Possible values: unset, ok, error. description: Optional description, string.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-7","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span , invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"span-update-name-","dir":"Reference","previous_headings":"","what":"span$update_name()","title":"OpenTelemetry Span Object — otel_span","text":"Update span's name. Overrides name give start_local_active_span() start_span(). undefined whether sampler use original new name.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Span Object — otel_span","text":"","code":"span$update_name(name)"},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Span Object — otel_span","text":"name: String, new span name.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"value-8","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Span Object — otel_span","text":"span object , invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Span Object — otel_span","text":"","code":"fn <- function() {   trc <- otel::get_tracer(\"myapp\")   spn <- trc$start_span(\"fn\")   # ...   spn$set_attribute(\"key\", \"value\")   # ...   on.exit(spn$end(status_code = \"error\"), add = TRUE)   # ...   spn$end(status_code = \"ok\") } fn()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":null,"dir":"Reference","previous_headings":"","what":"An OpenTelemetry Span Context object — otel_span_context","title":"An OpenTelemetry Span Context object — otel_span_context","text":"otel_tracer_provider -> otel_tracer -> otel_span -> otel_span_context","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An OpenTelemetry Span Context object — otel_span_context","text":"representation span can serialized, copied processes, can used create new child spans.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-get-span-id-","dir":"Reference","previous_headings":"","what":"span_context$get_span_id()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Get id span.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$get_span_id()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"String scalar, span id. invalid spans invalid_span_id.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-get-trace-flags-","dir":"Reference","previous_headings":"","what":"span_context$get_trace_flags()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Get trace flags span. See specification details trace flags.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$get_trace_flags()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"list entries: is_sampled: logical flag, whether trace span sampled. FALSE caller recording trace. See details specification. is_random: logical flag, specifies trace ids generated. See details specification.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-get-trace-id-","dir":"Reference","previous_headings":"","what":"span_context$get_trace_id()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Get id trace span belongs .","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$get_trace_id()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"string scalar, trace id. invalid spans invalid_trace_id.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-is-remote-","dir":"Reference","previous_headings":"","what":"span_context$is_remote()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Whether span propagated remote parent.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$is_remote()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-4","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-is-sampled-","dir":"Reference","previous_headings":"","what":"span_context$is_sampled()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Whether span sampled. is_sampled trace flags, see get_trace_flags() .","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$is_sampled()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-5","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-is-valid-","dir":"Reference","previous_headings":"","what":"span_context$is_valid()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Whether span valid. Sometimes otel functions return invalid span span context referring invalid span. E.g. get_active_span_context() active span. is_valid() checks span valid. span id invalid span invalid_span_id.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$is_valid()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-6","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"span-context-to-http-headers-","dir":"Reference","previous_headings":"","what":"span_context$to_http_headers()","title":"An OpenTelemetry Span Context object — otel_span_context","text":"Serialize span context one HTTP headers can transmitted processes servers, create distributed trace. process can deserialize headers span context can used create new remote spans.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"span_context$to_http_headers()"},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"value-7","dir":"Reference","previous_headings":"","what":"Value","title":"An OpenTelemetry Span Context object — otel_span_context","text":"named character vector, HTTP header representation span context. Usually includes traceparent header. May include headers.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_span_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An OpenTelemetry Span Context object — otel_span_context","text":"","code":"spc <- get_active_span_context() spc$get_trace_flags() #> list() spc$get_trace_id() #> [1] \"00000000000000000000000000000000\" spc$get_span_id() #> [1] \"0000000000000000\" spc$is_remote() #> [1] FALSE spc$is_sampled() #> [1] FALSE spc$is_valid() #> [1] FALSE spc$to_http_headers() #> named character(0)"},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Tracer Object — otel_tracer","title":"OpenTelemetry Tracer Object — otel_tracer","text":"otel_tracer_provider -> otel_tracer -> otel_span -> otel_span_context","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Object — otel_tracer","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Usually need deal otel_tracer objects directly. start_local_active_span() (start_span()) automatically sets tracer uses create spans. tracer object created calling get_tracer() method otel_tracer_provider. can use start_span() method  tracer object create span. Typically separate tracer object instrumented R package.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"tracer-start-span-","dir":"Reference","previous_headings":"","what":"tracer$start_span()","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Creates starts new span. activate new span. equivalent start_span() function.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Tracer Object — otel_tracer","text":"","code":"tracer_start_span(   name = NULL,   attributes = NULL,   links = NULL,   options = NULL )"},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Tracer Object — otel_tracer","text":"name: Name span. specified \"<NA>\". attributes: Span attributes. OpenTelemetry supports following R types attributes: `character, logical, double, integer. may use as_attributes() convert R types OpenTelemetry attributes. links: named list links spans. Every link must OpenTelemetry span (otel_span) object, list span object first element named span attributes rest. options:   named list span options. May include: start_system_time: Start time system time. start_steady_time: Start time using steady clock. parent: parent span span context. NA, span parent root span. NULL, current context used, .e. active span, . kind: Span kind, one span_kinds: \"internal\", \"server\", \"client\", \"producer\", \"consumer\".","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Object — otel_tracer","text":"new otel_span object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"tracer-is-enabled-","dir":"Reference","previous_headings":"","what":"tracer$is_enabled()","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Whether tracer active recording traces. equivalent is_tracing_enabled() function.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Tracer Object — otel_tracer","text":"","code":"tracer$is_enabled()"},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Logical scalar.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"tracer-flush-","dir":"Reference","previous_headings":"","what":"tracer$flush()","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Flush tracer provider: force buffered spans flush. Tracer providers might implement method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Tracer Object — otel_tracer","text":"","code":"tracer$flush()"},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"value-3","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Object — otel_tracer","text":"Nothing.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Tracer Object — otel_tracer","text":"","code":"tp <- get_default_tracer_provider() trc <- tp$get_tracer() trc$is_enabled() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"otel_tracer_provider -> otel_tracer -> otel_span -> otel_span_context","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"tracer provider defines traces exported collecting telemetry data. unlikely need use tracer provider objects directly. Usually single tracer provider R app script. Typically tracer provider created automatically, first start_local_active_span() start_span() call. otel decides tracer provider class use based Environment Variables.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"implementations","dir":"Reference","previous_headings":"","what":"Implementations","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"Note list updated manually may incomplete. tracer_provider_noop: -op tracer provider, used traces emitted. otelsdk::tracer_provider_file: Save traces JSONL file. otelsdk::tracer_provider_http: Send traces collector HTTP/OTLP. otelsdk::tracer_provider_memory: Collect emitted traces memory. testing. otelsdk::tracer_provider_stdstream: Write traces standard output error file. Primarily debugging.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"tracer-provider-get-tracer-","dir":"Reference","previous_headings":"","what":"tracer_provider$get_tracer()","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"Get create new tracer object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"","code":"tracer_provider$get_tracer(   name = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL )"},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"name: Tracer name, see get_tracer(). version: Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url: Optional. Specifies Schema URL recorded emitted telemetry. attributes: Optional. Specifies instrumentation scope attributes associate emitted telemetry. See as_attributes() allowed values. can also use as_attributes() convert R objects OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"Returns OpenTelemetry tracer (otel_tracer) object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"see-also","dir":"Reference","previous_headings":"","what":"See also","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"get_default_tracer_provider(), get_tracer().","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"tracer-provider-flush-","dir":"Reference","previous_headings":"","what":"tracer_provider$flush()","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"Force buffered spans flush. Tracer providers might implement method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"","code":"tracer_provider$flush()"},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"value-2","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"Nothing.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Tracer Provider Object — otel_tracer_provider","text":"","code":"tp <- otel::get_default_tracer_provider() trc <- tp$get_tracer() trc$is_enabled() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"otel_meter_provider -> otel_meter -> otel_counter, otel_up_down_counter, otel_histogram, otel_gauge","code":""},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"Usually need deal otel_up_down_counter objects directly. up_down_counter_add() automatically sets meter creates -counter instrument, needed. -counter object created calling create_up_down_counter() method otel_meter_provider(). can use add() method increment decrement counter. R -counters represented double values.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"up-down-counter-add-","dir":"Reference","previous_headings":"","what":"up_down_counter$add()","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"Increment decrement -counter fixed amount.","code":""},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"","code":"up_down_counter$add(value, attributes = NULL, span_context = NULL, ...)"},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"value: Value increment decrement -counter . attributes: Additional attributes add. span_context: Span context. missing, active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"value-1","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"-counter object , invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_up_down_counter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry Up-Down Counter Object — otel_up_down_counter","text":"","code":"mp <- get_default_meter_provider() mtr <- mp$get_meter() ctr <- mtr$create_up_down_counter(\"session\") ctr$add(1)"},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"returned headers can sent HTTP, set environment variables subprocesses.","code":""},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"","code":"pack_http_context()"},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"named character vector, lowercase names. might empty vector, e.g. tracing disabled.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"","code":"hdr <- otel::pack_http_context() ctx <- otel::extract_http_context() ctx$is_valid() #> [1] FALSE"},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Start and activate a span — start_local_active_span","title":"Start and activate a span — start_local_active_span","text":"Creates, starts activates OpenTelemetry span. Usually want functions instead start_span(), activate new span.","code":""},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start and activate a span — start_local_active_span","text":"","code":"start_local_active_span(   name = NULL,   attributes = NULL,   links = NULL,   options = NULL,   ...,   tracer = NULL,   activation_scope = parent.frame(),   end_on_exit = TRUE )"},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start and activate a span — start_local_active_span","text":"name Name span. specified \"<NA>\". attributes Span attributes. OpenTelemetry supports following R types attributes: `character, logical, double, integer. may use as_attributes() convert R types OpenTelemetry attributes. links named list links spans. Every link must OpenTelemetry span (otel_span) object, list span object first element named span attributes rest. options named list span options. May include: start_system_time: Start time system time. start_steady_time: Start time using steady clock. parent: parent span span context. NA, span parent root span. NULL, current context used, .e. active span, . kind: Span kind, one span_kinds: \"internal\", \"server\", \"client\", \"producer\", \"consumer\". ... Additional arguments passed start_span() method tracer. tracer tracer object name tracer use, see get_tracer(). NULL default_tracer_name() used. activation_scope R scope activate span . Defaults caller frame. end_on_exit Whether also end span activation scope exits.","code":""},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start and activate a span — start_local_active_span","text":"new OpenTelemetry span object (class otel_span), invisibly. See otel_span information returned object.","code":""},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start and activate a span — start_local_active_span","text":"end_on_exit TRUE (default), also ends span activation scope finishes.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/start_local_active_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start and activate a span — start_local_active_span","text":"","code":"fn1 <- function() {   otel::start_local_active_span(\"fn1\")   fn2() } fn2 <- function() {   otel::start_local_active_span(\"fn2\") } fn1()"},{"path":"https://otel.r-lib.org/reference/start_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Start an OpenTelemetry span. — start_span","title":"Start an OpenTelemetry span. — start_span","text":"Creates new OpenTelemetry span starts , without activating . Usually want start_local_active_span() instead start_span. start_local_active_span() also activates span caller frame, ends span caller frame exits.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start an OpenTelemetry span. — start_span","text":"","code":"start_span(   name = NULL,   attributes = NULL,   links = NULL,   options = NULL,   ...,   tracer = NULL )"},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start an OpenTelemetry span. — start_span","text":"name Name span. specified \"<NA>\". attributes Span attributes. OpenTelemetry supports following R types attributes: `character, logical, double, integer. may use as_attributes() convert R types OpenTelemetry attributes. links named list links spans. Every link must OpenTelemetry span (otel_span) object, list span object first element named span attributes rest. options named list span options. May include: start_system_time: Start time system time. start_steady_time: Start time using steady clock. parent: parent span span context. NA, span parent root span. NULL, current context used, .e. active span, . kind: Span kind, one span_kinds: \"internal\", \"server\", \"client\", \"producer\", \"consumer\". ... Additional arguments passed start_span() method tracer. tracer tracer object name tracer use, see get_tracer(). NULL default_tracer_name() used.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start an OpenTelemetry span. — start_span","text":"OpenTelemetry span (otel_span).","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start an OpenTelemetry span. — start_span","text":"use start_span() need manage span's activation manually. Otherwise use start_local_active_span(). must end span calling end_span(). Alternatively can also end local_active_span() with_active_span() setting end_on_exit = TRUE. good idea end spans created start_span() base::.exit() call.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start an OpenTelemetry span. — start_span","text":"","code":"fun <- function() {   # start span, do not activate   spn <- otel::start_span(\"myfun\")   # do not leak resources   on.exit(otel::end_span(spn), add = TRUE)   myfun <- function() {      # activate span for this function      otel::local_active_span(spn)      # create child span      spn2 <- otel::start_local_active_span(\"myfun/2\")   }    myfun2 <- function() {     # activate span for this function     otel::local_active_span(spn)     # create child span     spn3 <- otel::start_local_active_span(\"myfun/3\")   }   myfun()   myfun2()   end_span(spn) } fun()"},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op tracer provider — tracer_provider_noop","title":"No-op tracer provider — tracer_provider_noop","text":"tracer provider (otel_tracer_provider) otel uses tracing disabled.","code":""},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No-op tracer provider — tracer_provider_noop","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"No-op tracer provider — tracer_provider_noop","text":"methods -ops return objects also -ops.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"No-op tracer provider — tracer_provider_noop","text":"","code":"tracer_provider_noop$new() #> <otel_tracer_provider_noop/otel_tracer_provider> #> methods: #>   get_tracer(name, version, schema_url, attributes) #>   flush() #>   get_spans()"},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry tracing constants — tracing-constants","title":"OpenTelemetry tracing constants — tracing-constants","text":"Various constants related OpenTelemetry tracing.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry tracing constants — tracing-constants","text":"","code":"invalid_trace_id  invalid_span_id  span_kinds  span_status_codes"},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenTelemetry tracing constants — tracing-constants","text":"applicable.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"invalid-trace-id","dir":"Reference","previous_headings":"","what":"invalid_trace_id","title":"OpenTelemetry tracing constants — tracing-constants","text":"invalid_trace_id string scalar, invalid trace id. active span, get_active_span_context() returns span context invalid trace id.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"invalid-span-id","dir":"Reference","previous_headings":"","what":"invalid_span_id","title":"OpenTelemetry tracing constants — tracing-constants","text":"invalid_span_id string scalar, invalid span id. active span, get_active_span_context() returns span context invalid span id.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"span-kinds","dir":"Reference","previous_headings":"","what":"span_kinds","title":"OpenTelemetry tracing constants — tracing-constants","text":"span_kinds character vector listing possible span kinds. See OpenTelemetry specification use .","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"span-status-codes","dir":"Reference","previous_headings":"","what":"span_status_codes","title":"OpenTelemetry tracing constants — tracing-constants","text":"span_status_codes character vector listing possible span status codes. can set status code span set_status() method otel_span objects. set explicitly, span ended automatically (start_local_active_span(), local_active_span() with_active_span()), otel sets status automatically \"ok\" \"error\", depending whether span ended handling error.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenTelemetry tracing constants — tracing-constants","text":"","code":"invalid_trace_id #> [1] \"00000000000000000000000000000000\" invalid_span_id #> [1] \"0000000000000000\" span_kinds #>    default                                              #> \"internal\"   \"server\"   \"client\" \"producer\" \"consumer\"  span_status_codes #> default                  #> \"unset\"    \"ok\" \"error\""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","title":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","text":"Increase decrease OpenTelemetry -counter","code":""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","text":"","code":"up_down_counter_add(   name,   value = 1L,   attributes = NULL,   context = NULL,   meter = NULL )"},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","text":"name Name -counter. value Value add subtract counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, . meter Meter object (otel_meter). Otherwise passed get_meter() get meter.","code":""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","text":"-counter object (otel_up_down_counter), invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Increase or decrease an OpenTelemetry up-down counter — up_down_counter_add","text":"","code":"otel::up_down_counter_add(\"session-count\", 1)"},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate R code with an active OpenTelemetry span — with_active_span","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"Activates span evaluating R expression. Usually need function spans created start_span(), activate new span. Usually need spans created start_local_active_span(), activates new span automatically.","code":""},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"","code":"with_active_span(span, expr, end_on_exit = FALSE)"},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"span OpenTelemetry span activate. expr R expression evaluate. end_on_exit Whether end evaluating R expression.","code":""},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"return value expr.","code":""},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"expr evaluated (error occurs), span deactivated previously active span active , . possible activate span multiple R frames.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"","code":"fun <- function() {   # start span, do not activate   spn <- otel::start_span(\"myfun\")   # do not leak resources   on.exit(otel::end_span(spn), add = TRUE)   myfun <- function() {      otel::with_active_span(spn, {        # create child span        spn2 <- otel::start_local_active_span(\"myfun/2\")      })   }    myfun2 <- function() {     otel::with_active_span(spn, {       # create child span       spn3 <- otel::start_local_active_span(\"myfun/3\")     })   }   myfun()   myfun2()   end_span(spn) } fun()"},{"path":"https://otel.r-lib.org/reference/zci.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero Code Instrumentation — Zero Code Instrumentation","title":"Zero Code Instrumentation — Zero Code Instrumentation","text":"otel supports zero-code instrumentation (ZCI) via OTEL_INSTRUMENT_R_PKGS environment variable. Set comma separated list package names, packages want instrument. otel hook base::trace() produce OpenTelemetry output every function packages.","code":""},{"path":"https://otel.r-lib.org/reference/zci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero Code Instrumentation — Zero Code Instrumentation","text":"applicable.","code":""},{"path":"https://otel.r-lib.org/reference/zci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zero Code Instrumentation — Zero Code Instrumentation","text":"default functions listed packages instrumented. instrument subset functions set OTEL_INSTRUMENT_R_PKGS_<PKG>_INCLUDE environment variable list glob expressions. <PKG> package name capital letters. functions match least one glob expression instrumented. exclude functions instrumentation, set OTEL_INSTRUMENT_R_PKGS_<PKG>_EXCLUDE environment variable list glob expressions. <PKG> package name capital letters. Functions match least one glob expression instrumented. Inclusion globs applied exclusion globs.","code":""},{"path":"https://otel.r-lib.org/reference/zci.html","id":"caveats","dir":"Reference","previous_headings":"","what":"Caveats","title":"Zero Code Instrumentation — Zero Code Instrumentation","text":"user calls base::trace() instrumented function, deletes instrumentation, since second base::trace() call overwrites first.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/zci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero Code Instrumentation — Zero Code Instrumentation","text":"","code":"# To run an R script with ZCI: # OTEL_TRACES_EXPORTER=http OTEL_INSTRUMENT_R_PKGS=dplyr,tidyr R -q -f script.R"},{"path":"https://otel.r-lib.org/news/index.html","id":"otel-010","dir":"Changelog","previous_headings":"","what":"otel 0.1.0","title":"otel 0.1.0","text":"First release CRAN.","code":""}]
