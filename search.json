[{"path":"https://otel.r-lib.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 otel authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://otel.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer.","code":""},{"path":"https://otel.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). otel: R Implementation 'OpenTelemetry', exporters. R package version 0.0.0.9000, https://otel.r-lib.org.","code":"@Manual{,   title = {otel: R Implementation of 'OpenTelemetry', exporters},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://otel.r-lib.org}, }"},{"path":"https://otel.r-lib.org/index.html","id":"otel","dir":"","previous_headings":"","what":"R Implementation of OpenTelemetry, exporters","title":"R Implementation of OpenTelemetry, exporters","text":"OpenTelemetry API R packages projects High-quality, ubiquitous, portable telemetry enable effective observability. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data (metrics, logs, traces) analysis order understand software’s performance behavior.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"the-otel-and-otelsdk-r-packages","dir":"","previous_headings":"","what":"The otel and otelsdk R packages","title":"R Implementation of OpenTelemetry, exporters","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Implementation of OpenTelemetry, exporters","text":"Install otel CRAN: can install development version otel GitHub :","code":"# install.packages(\"pak\") pak::pak(\"otel\") # install.packages(\"pak\") pak::pak(\"r-lib/otel\")"},{"path":"https://otel.r-lib.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Implementation of OpenTelemetry, exporters","text":"instrumenting package, set otel_tracer_name variable desired default tracer name (also default logger meter name). See ?otel_tracer_name. Call otel::start_span() create span. default span ends caller function exits. Use $set_attribute(), $add_event(), $add_link() $set_status() methods span manipulate . See otelsdk package producing output instrumented R package project.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"performance-impact","dir":"","previous_headings":"","what":"Performance impact","title":"R Implementation of OpenTelemetry, exporters","text":"Instrumenting R package otel minimal performance impact. otel::start_span() calls nothing telemetry data collected, evaluate arguments, either. allows writing without worrying performance hit evaluating attributes arguments.","code":"otel::start_span(\"myfunction\", attributes = otel::as_attributes(...), ...)"},{"path":"https://otel.r-lib.org/index.html","id":"zero-code-instrumentation","dir":"","previous_headings":"","what":"Zero-code instrumentation","title":"R Implementation of OpenTelemetry, exporters","text":"otel supports zero-code instrumentation via OTEL_INSTRUMENT_R_PKGS environment variable. Set comma separated list package names, packages want instrument. otel hook base::trace() produce OpenTelemetry output every function packages. default functions listed packages instrumented. instrument subset functions set OTEL_INSTRUMENT_R_PKGS_<PKG>_INCLUDE environment variable list glob expressions. <PKG> package name capital letters. functions match least one glob expression instrumented. exclude functions instrumentation, set OTEL_INSTRUMENT_R_PKGS_<PKG>_EXCLUDE environment variable list glob expressions. <PKG> package name capital letters. Functions match least one glob expression instrumented. Inclusion globs applied exclusion globs.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"production-and-development-r-sessions","dir":"","previous_headings":"","what":"Production and development R sessions","title":"R Implementation of OpenTelemetry, exporters","text":"default otel otelsdk run production mode. production mode otel (otelsdk) functions never error. behavior help catching errors early development instrumented project. Set OTEL_ENV environment variable dev switch development mode, otel otelsdk functions fail errors.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"concurrency","dir":"","previous_headings":"","what":"Concurrency","title":"R Implementation of OpenTelemetry, exporters","text":"support concurrency single thread, e.g. Shiny app serving multiple requests time, can manage lifetime activation OpenTelemetry spans manually. recommend following practices -process concurrency: Create new long lasting span otel::start_span(scope = NULL). Assign returned span corresponding object concurrent /asynchronous computation. Every span finalizer closes span. running code belongs concurrent computation represented span, activate specific R scope calling with_active_span() local_active_span(). logging use with_active_span() local_active_span() activate span belongs log messages. Similarly, metrics, call with_active_span() local_active_span() link instruments correct span. concurrent computation ends, close span manually $end() method. (Otherwise closed next garbage collection, assuming references .)","code":""},{"path":"https://otel.r-lib.org/index.html","id":"shiny-apps","dir":"","previous_headings":"","what":"Shiny apps","title":"R Implementation of OpenTelemetry, exporters","text":"otel convenience functions tie otel spans Shiny sessions: Call start_shiny_app() global.R file, app starts . Call start_shiny_session() server function, start new Shiny session, pass Shiny session object . start_shiny_session() creates long lasting OpenTelemetry span session$userData$otel_span. span represents Shiny session, see “Concurrency” . Call otel::local_active_span(session$userData$otel_span) beginning reactive expression switch span represents current Shiny session. See examples included otel package.","code":""},{"path":"https://otel.r-lib.org/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R Implementation of OpenTelemetry, exporters","text":"MIT © Posit, PBC","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"R objects as OpenTelemetry attributes — as_attributes","title":"R objects as OpenTelemetry attributes — as_attributes","text":"Convert list R objects form suitable OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R objects as OpenTelemetry attributes — as_attributes","text":"","code":"as_attributes(x)"},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R objects as OpenTelemetry attributes — as_attributes","text":"x list R objects, used OpenTelemetry attributes.","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R objects as OpenTelemetry attributes — as_attributes","text":"named list can used attributes argument start_span(), log(), counter_add(), etc. x named, names empty string NA, integer numbers used missing invalid names. elements x natively supported R types OpenTelemetry (character, logical, double, integer), printed form captured using utils::capture.output().","code":""},{"path":"https://otel.r-lib.org/reference/as_attributes.html","id":"limits","dir":"Reference","previous_headings":"","what":"Limits","title":"R objects as OpenTelemetry attributes — as_attributes","text":"number attributes can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default 128. length attribute (vector) can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default Inf. Note applied length attribute R vector. E.g. currently limit number characters individual strings.","code":""},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase an OpenTelemetry counter using the default meter — counter_add","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"Increase OpenTelemetry counter using default meter","code":""},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"","code":"counter_add(name, value = 1L, attributes = NULL, context = NULL)"},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"name Name counter. value Value add counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"counter object, invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"Exporters, like ones otelsdk package, can use function determine default tracer name, instrumentation author specified one. instrumentation author, probably need call function directly, read learn choosing setting tracer name.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"","code":"default_tracer_name(name = NULL)"},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"name Custom tracer name. NULL otel construct tracer (meter, logger) name according algorithm detailed .","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"about-tracer-names","dir":"Reference","previous_headings":"","what":"About tracer names","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"name tracer identifies OpenTelemetry instrumentation scope. Instrumentation scopes can used organize collected telemetry data. otel can also use instrumentation scopes suppress emitting unneeded telemetry data, see 'Environment variables'. otel R package makes sense create separate instrumentation scope R package emits telemetry data. otel can automatically, package author.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"setting-the-tracer-name","dir":"Reference","previous_headings":"","what":"Setting the tracer name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"package author, can define otel_tracer_name symbol package set desired tracer name. example, callr package .R file:   See tips choosing tracer name. like default tracer name, can call get_tracer() (get_logger() get_meter() manually desired name.","code":"otel_tracer_name <- \"org.r-lib.callr\""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"automatic-tracer-name-detection-in-otel","dir":"Reference","previous_headings":"","what":"Automatic tracer name detection in otel","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"detailed algorithm otel uses default_tracer_name: Using base::topenv() finds calling package (top level environment), recursively. ignores otel otelsdk packages searching. finds base environment global environment, returns org.project.R tracer name. Otherwise looks otel_tracer_name symbol inside top level environment found. symbol exists must string scalar otel use tracer name. symbol exist, otel use r.package.<environment-name> tracer name. <environment-name> usually package name.","code":""},{"path":"https://otel.r-lib.org/reference/default_tracer_name.html","id":"choosing-a-tracer-name","dir":"Reference","previous_headings":"","what":"Choosing a tracer name","title":"Default tracer name (and meter and logger name) for an R package — default_tracer_name","text":"OpenTelemetry specification recommends using tracer name identifies instrumentation scope, .e. package. tips choosing tracer name: R package can associated URL, can use \"reverse\" URL. E.g. since callr package's online manual https://callr.r-lib.org, can use org.r-lib.callr. R package belongs company, can use \"reverse\" company URL, possibly additional prefix. E.g. shiny R package Posit, co.posit.r-package.shiny seems like good name. set otel_tracer_name, default_tracer_name use r.package.<package-name> tracer name.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables to configure otel — Environment variables","title":"Environment variables to configure otel — Environment variables","text":"manual page contains environment variables can use configure otel package. Start 'Selecting exporters' section want produce telemetry data instrumented R package.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environment variables to configure otel — Environment variables","text":"need set environment variables configuring collection telemetry data, unless noted otherwise.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-env","dir":"Reference","previous_headings":"","what":"OTEL_ENV","title":"Environment variables to configure otel — Environment variables","text":"default otel runs production mode. production mode otel functions never error. Errors telemetry code stop monitored application. behavior ideal development, one prefer catch errors early. Set   run otel development mode, otel functions fail error, make easier fix errors.","code":"OTEL_ENV=dev"},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"selecting-exporters","dir":"Reference","previous_headings":"","what":"Selecting Exporters","title":"Environment variables to configure otel — Environment variables","text":"otel responsible selecting providers use traces, logs metrics. can use environment variables point otel functions desired providers. none environment variables set, otel emit telemetry data. See otelsdk package configuring selected providers.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-traces-exporter","dir":"Reference","previous_headings":"","what":"OTEL_TRACES_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"name selected tracer provider. See get_default_tracer_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-traces-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_TRACES_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"R specific version OTEL_TRACES_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-logs-exporter","dir":"Reference","previous_headings":"","what":"OTEL_LOGS_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"name selected logger provider. See get_default_logger_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-logs-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_LOGS_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"R specific version OTEL_LOGS_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-metrics-exporter","dir":"Reference","previous_headings":"","what":"OTEL_METRICS_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"name selected meter provider. See get_default_meter_provider() possible values.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-metrics-exporter","dir":"Reference","previous_headings":"","what":"OTEL_R_METRICS_EXPORTER","title":"Environment variables to configure otel — Environment variables","text":"R specific version OTEL_METRICS_EXPORTER.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"suppressing-instrumentation-scopes-r-packages-","dir":"Reference","previous_headings":"","what":"Suppressing Instrumentation Scopes (R Packages)","title":"Environment variables to configure otel — Environment variables","text":"otel two environment variables fine tune instrumentation scopes (.e. R packages, typically) emit telemetry data. default, .e. neither set, packages emit telemetry data.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-emit-scopes","dir":"Reference","previous_headings":"","what":"OTEL_R_EMIT_SCOPES","title":"Environment variables to configure otel — Environment variables","text":"Set environment variable comma separated string instrumentation scope names R package names restrict telemetry packages . name instrumentation scope name tracer, logger meter, see default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_EMIT_SCOPES=\"org.r-lib.*,dplyr\" selects packages instrumentation scope starts org.r-lib. also dplyr.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-suppress-scopes","dir":"Reference","previous_headings":"","what":"OTEL_R_SUPPRESS_SCOPES","title":"Environment variables to configure otel — Environment variables","text":"Set environment variable comma separated string instrumentation scope names R package names suppress telemetry data packages. name instrumentation scope name tracer, logger meter, see default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_SUPPRESS_SCOPES=\"org.r-lib.*,dplyr\" excludes packages instrumentation scope starts org.r-lib. also dplyr.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"zero-code-instrumentation","dir":"Reference","previous_headings":"","what":"Zero Code Instrumentation","title":"Environment variables to configure otel — Environment variables","text":"otel can instrument R packages OpenTelemetry data collection without changing source code. relies changing code R functions manually using base::trace() can configured using environment variables.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-instrument-pkgs","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS","title":"Environment variables to configure otel — Environment variables","text":"Set OTEL_R_INSTRUMENT_PKGS comma separated list packages instrument. automatic instrumentation happens otel package loaded, general best set environment variable loading R.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-instrument-pkgs-lt-pkg-gt-include","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS_<pkg>_INCLUDE","title":"Environment variables to configure otel — Environment variables","text":"automatically instrumented package, set environment variable instrument subset functions. parsed comma separated string function names, may also include ? * wildcards (globbing).","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-r-instrument-pkgs-lt-pkg-gt-exclude","dir":"Reference","previous_headings":"","what":"OTEL_R_INSTRUMENT_PKGS_<pkg>_EXCLUDE","title":"Environment variables to configure otel — Environment variables","text":"automatically instrumented package, set environment variable exclude functions instrumentation. syntax *_INCLUDE pair. set, inclusion applied exclusion.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-attribute-count-limit","dir":"Reference","previous_headings":"","what":"OTEL_ATTRIBUTE_COUNT_LIMIT","title":"Environment variables to configure otel — Environment variables","text":"Set environment variable limit number attributes single span, log record, metric measurement, etc. unset, default limit 128 attributes.","code":""},{"path":"https://otel.r-lib.org/reference/environment-variables.html","id":"otel-attribute-value-length-limit","dir":"Reference","previous_headings":"","what":"OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","title":"Environment variables to configure otel — Environment variables","text":"Set environment variable limit length vectors attributes single span, log record, metric measurement, etc. unset, limit lengths vectors attributes.","code":""},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a span context from HTTP headers received from a client — extract_http_context","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"return value can used parent option starting span.","code":""},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"","code":"extract_http_context(headers)"},{"path":"https://otel.r-lib.org/reference/extract_http_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"headers named list one two strings: traceparent mandatory, tracestate optional.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"Record value OpenTelemetry gauge using default meter","code":""},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"","code":"gauge_record(name, value, attributes = NULL, context = NULL)"},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"name Name gauge value Value record. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/gauge_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"gauge object, invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the active span context — get_active_span_context","title":"Returns the active span context — get_active_span_context","text":"sometimes useful writing loggers meters, associate logging metrics reporting traces.","code":""},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the active span context — get_active_span_context","text":"","code":"get_active_span_context()"},{"path":"https://otel.r-lib.org/reference/get_active_span_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the active span context — get_active_span_context","text":"active span context. active span context, invalid span context returned, .e. spc$is_valid() FALSE returned spc.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default logger provider — get_default_logger_provider","title":"Get the default logger provider — get_default_logger_provider","text":"logger provider defines logs exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default logger provider — get_default_logger_provider","text":"","code":"get_default_logger_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default logger provider — get_default_logger_provider","text":"default logger provider, otel_logger_provider object.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_logger_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default logger provider — get_default_logger_provider","text":"default set currently, creates sets default. default logger provider created based OTEL_R_LOGS_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_LOGS_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: traces exported. stdout console: uses otelsdk::logger_provider_stdstream, write traces standard output. stderr: uses otelsdk::logger_provider_stdstream, write traces standard error. http otlp: uses otelsdk::logger_provider_http, send traces HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::logger_provider_file write logs JSONL file. <package>::<provider>: select <provider> object <package> package use logger provider. calls <package>::<provider>$new() create new logger provider. fails reason, e.g. package installed, throws error.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default meter provider — get_default_meter_provider","title":"Get the default meter provider — get_default_meter_provider","text":"meter provider defines metrics exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default meter provider — get_default_meter_provider","text":"","code":"get_default_meter_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default meter provider — get_default_meter_provider","text":"default meter provider, otel_meter_provider object.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_meter_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default meter provider — get_default_meter_provider","text":"default set currently, creates sets default. default meter provider created based OTEL_R_METRICS_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_METRICS_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: metrics exported. stdout console: uses otelsdk::meter_provider_stdstream, write metrics standard output. stderr: uses otelsdk::meter_provider_stdstream, write metrics standard error. http otlp: uses otelsdk::meter_provider_http, send metrics HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::meter_provider_file write metrics JSONL file. <package>::<provider>: select <provider> object <package> package use meter provider. calls <package>::<provider>$new() create new meter provider. fails reason, e.g. package installed, throws error.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default tracer provider — get_default_tracer_provider","title":"Get the default tracer provider — get_default_tracer_provider","text":"tracer provider defines traces exported collecting telemetry data. unlikely need call function directly, read learn configure exporter use.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default tracer provider — get_default_tracer_provider","text":"","code":"get_default_tracer_provider()"},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default tracer provider — get_default_tracer_provider","text":"default tracer provider, otel_tracer_provider object. See otel_tracer_provider methods otel_tracer_provider object.","code":""},{"path":"https://otel.r-lib.org/reference/get_default_tracer_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default tracer provider — get_default_tracer_provider","text":"default set currently, creates sets default. default tracer provider created based OTEL_R_TRACES_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_TRACES_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: traces exported. stdout console: uses otelsdk::tracer_provider_stdstream, write traces standard output. stderr: uses otelsdk::tracer_provider_stdstream, write traces standard error. http otlp: uses otelsdk::tracer_provider_http, send traces HTTP, using OpenTelemetry Protocol (OTLP). otlp/file uses otelsdk::tracer_provider_file write traces JSONL file. <package>::<provider>: select <provider> object <package> package use tracer provider. calls <package>::<provider>$new() create new tracer provider. fails reason, e.g. package installed, throws error.","code":""},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a logger from the default logger provider — get_logger","title":"Get a logger from the default logger provider — get_logger","text":"Get logger default logger provider","code":""},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a logger from the default logger provider — get_logger","text":"","code":"get_logger(name = NULL)"},{"path":"https://otel.r-lib.org/reference/get_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a logger from the default logger provider — get_logger","text":"name Name new tracer. missing, deduced automatically.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a meter from the default meter provider — get_meter","title":"Get a meter from the default meter provider — get_meter","text":"Get meter default meter provider","code":""},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a meter from the default meter provider — get_meter","text":"","code":"get_meter(name = NULL)"},{"path":"https://otel.r-lib.org/reference/get_meter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a meter from the default meter provider — get_meter","text":"name Name new tracer. missing, deduced automatically.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tracer from the default tracer provider — get_tracer","title":"Get a tracer from the default tracer provider — get_tracer","text":"Calls get_default_tracer_provider() get default tracer provider. calls $get_tracer() method create new tracer.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tracer from the default tracer provider — get_tracer","text":"","code":"get_tracer(name = NULL, version = NULL, schema_url = NULL, attributes = NULL)"},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tracer from the default tracer provider — get_tracer","text":"name Name new tracer. missing, deduced automatically using default_tracer_name(). Make sure read manual page default_tracer_name() using argument. version Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url Optional. Specifies Schema URL recorded emitted telemetry. attributes Optional. Specifies instrumentation scope attributes associate emitted telemetry.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tracer from the default tracer provider — get_tracer","text":"OpenTelemetry tracer, otel_tracer object.","code":""},{"path":"https://otel.r-lib.org/reference/get_tracer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a tracer from the default tracer provider — get_tracer","text":"Usually need call function explicitly. called start_span() needed. might need advanced use cases, e.g. need use multiple tracer names (=instrumentation scopes) within package. Calling get_tracer() multiple times name (auto-deduced name) return (internal) tracer object. (Even R external pointer objects representing different.) tracer destroyed tracer provider destroyed.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"Record value OpenTelemetry histogram using default meter","code":""},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"","code":"histogram_record(name, value, attributes = NULL, context = NULL)"},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"name Name histogram. value Value record. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/histogram_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"histogram object, invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry logging is active — is_logging","title":"Check whether OpenTelemetry logging is active — is_logging","text":"Check whether OpenTelemetry logging active","code":""},{"path":"https://otel.r-lib.org/reference/is_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry logging is active — is_logging","text":"","code":"is_logging()"},{"path":"https://otel.r-lib.org/reference/is_logging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry logging is active — is_logging","text":"TRUE OpenTelemetry logging active, FALSE otherwise.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_measuring.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry metrics collection is active — is_measuring","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"Check whether OpenTelemetry metrics collection active","code":""},{"path":"https://otel.r-lib.org/reference/is_measuring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"","code":"is_measuring()"},{"path":"https://otel.r-lib.org/reference/is_measuring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"TRUE OpenTelemetry metrics collection  active, FALSE otherwise.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/is_tracing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry tracing is active — is_tracing","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"useful avoiding computation tracing inactive.","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"","code":"is_tracing(name = NULL)"},{"path":"https://otel.r-lib.org/reference/is_tracing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"name Tracer name, instrumentation scope. Passed get_tracer().","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"TRUE OpenTelemetry tracing active, FALSE otherwise.","code":""},{"path":"https://otel.r-lib.org/reference/is_tracing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"calls get_tracer() name calls tracer's $is_enabled() method.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate an OpenTelemetry span for an R scope — local_active_span","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"Activate OpenTelemetry span R scope","code":""},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"","code":"local_active_span(span, activation_scope = parent.frame())"},{"path":"https://otel.r-lib.org/reference/local_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"span OpenTelemetry span activate. activation_scope scope activate , defaults caller frame.","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Log an OpenTelemetry log message, using the default logger — log","title":"Log an OpenTelemetry log message, using the default logger — log","text":"Log OpenTelemetry log message, using default logger","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log an OpenTelemetry log message, using the default logger — log","text":"","code":"log(msg, ..., severity = \"info\", .envir = parent.frame())  log_trace(msg, ..., .envir = parent.frame())  log_debug(msg, ..., .envir = parent.frame())  log_info(msg, ..., .envir = parent.frame())  log_warn(msg, ..., .envir = parent.frame())  log_error(msg, ..., .envir = parent.frame())  log_fatal(msg, ..., .envir = parent.frame())"},{"path":"https://otel.r-lib.org/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log an OpenTelemetry log message, using the default logger — log","text":"msg Log message, may contain R expressions evaluate within braces. ... Additional arguments passed $log() method default logger. severity Log severity, string, one \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\". .envir Environment evaluate interpolated  expressions log message . automatically deactivated scope.","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log an OpenTelemetry log message, using the default logger — log","text":"logger, invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log an OpenTelemetry log message, using the default logger — log","text":"log_trace() log() severity_level \"trace\". log_debug() log() severity_level \"debug\". log_info() log() severity_level \"info\". log_warn() log() severity_level \"warn\". log_error() log() severity_level \"error\". log_fatal() log() severity_level \"fatal\".","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry log severity levels — log_severity_levels","title":"OpenTelemetry log severity levels — log_severity_levels","text":"named integer vector, severity levels numeric form. names severity levels text form. otel functions accept forms severity levels, text form readable.","code":""},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry log severity levels — log_severity_levels","text":"","code":"log_severity_levels"},{"path":"https://otel.r-lib.org/reference/log_severity_levels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenTelemetry log severity levels — log_severity_levels","text":"object class integer length 24.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op logger provider — logger_provider_noop","title":"No-op logger provider — logger_provider_noop","text":"-op logger provider","code":""},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No-op logger provider — logger_provider_noop","text":"","code":"logger_provider_noop"},{"path":"https://otel.r-lib.org/reference/logger_provider_noop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"No-op logger provider — logger_provider_noop","text":"object class list length 1.","code":""},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op logger provider — meter_provider_noop","title":"No-op logger provider — meter_provider_noop","text":"-op logger provider","code":""},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No-op logger provider — meter_provider_noop","text":"","code":"meter_provider_noop"},{"path":"https://otel.r-lib.org/reference/meter_provider_noop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"No-op logger provider — meter_provider_noop","text":"object class list length 1.","code":""},{"path":"https://otel.r-lib.org/reference/otel_span.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO — otel_span","title":"TODO — otel_span","text":"TODO","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry tracer provider objects — otel_tracer_provider","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"tracer provider defines traces exported collecting telemetry data. unlikely need use tracer provider objects directly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"implementations","dir":"Reference","previous_headings":"","what":"Implementations","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"Note list updated manually may incomplete. tracer_provider_noop: -op tracer provider, used traces emitted. otelsdk::tracer_provider_file: Save traces JSONL file. otelsdk::tracer_provider_http: Send traces collector HTTP/OTLP. otelsdk::tracer_provider_memory: Collect emitted traces memory. testing. otelsdk::tracer_provider_stdstream: Write traces standard output error file. Primarily debugging.","code":""},{"path":[]},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"description","dir":"Reference","previous_headings":"","what":"Description","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"Get create new tracer object.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"","code":"$get_tracer(   name = NULL,   version = NULL,   schema_url = NULL,   attributes = NULL )"},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"arguments-","dir":"Reference","previous_headings":"","what":"Arguments:","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"name: Tracer name, see get_tracer(). version: Optional. Specifies version instrumentation scope scope version (e.g. R package version). Example value: \"1.0.0\". schema_url: Optional. Specifies Schema URL recorded emitted telemetry. attributes: Optional. Specifies instrumentation scope attributes associate emitted telemetry.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"see-also","dir":"Reference","previous_headings":"","what":"See also","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"get_tracer().","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"description-1","dir":"Reference","previous_headings":"","what":"Description","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"Force buffered spans flush. Tracer providers might implement method.","code":""},{"path":"https://otel.r-lib.org/reference/otel_tracer_provider.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry tracer provider objects — otel_tracer_provider","text":"","code":"$flush()"},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"returned headers can sent HTTP, set environment variables subprocesses.","code":""},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"","code":"pack_http_context()"},{"path":"https://otel.r-lib.org/reference/pack_http_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"named character vector, lowercase names.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Start tracing a Shiny app — start_shiny_app","title":"Start tracing a Shiny app — start_shiny_app","text":"Call function global.R.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start tracing a Shiny app — start_shiny_app","text":"","code":"start_shiny_app(service_name = NULL)"},{"path":"https://otel.r-lib.org/reference/start_shiny_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start tracing a Shiny app — start_shiny_app","text":"service_name name app. Defaults name current working directory.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start tracing a Shiny app — start_shiny_app","text":"OpenTelemetry tracer (otel_tracer), invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Start tracing a Shiny session — start_shiny_session","title":"Start tracing a Shiny session — start_shiny_session","text":"Call function Shiny server function, beginning.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start tracing a Shiny session — start_shiny_session","text":"","code":"start_shiny_session(session, attributes = NULL, options = NULL, ...)"},{"path":"https://otel.r-lib.org/reference/start_shiny_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start tracing a Shiny session — start_shiny_session","text":"session Shiny session object. attributes, options, ... Additional arguments passed $start_span() session span.","code":""},{"path":"https://otel.r-lib.org/reference/start_shiny_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start tracing a Shiny session — start_shiny_session","text":"OpenTelemetry span corresponding Shiny session, invisibly.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a new OpenTelemetry span, using the default tracer — start_span","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"span represents unit work operation. Spans building blocks traces. start_span() typically called beginning function beginning larger operation, e.g. HTTP request.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"","code":"start_span(   name = NULL,   tracer_name = NULL,   attributes = NULL,   links = NULL,   options = NULL,   scope = parent.frame(),   activation_scope = parent.frame() )"},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"name Name span. specified \"<NA>\". tracer_name name tracer use, see get_tracer(). attributes Span attributes. may use as_attributes() convert R objects OpenTelemetry attributes. OpenTelemetry supports following R types attributes: character, logical, double, integer. links TODO options TODO scope TODO activation_scope TODO","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"new OpenTelemetry span object (class otel_span), invisibly. See otel_span information returned object.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"Calls get_tracer() tracer_name tracer name, calls $start_span() method tracer arguments.","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"lifetime-of-a-span","dir":"Reference","previous_headings":"","what":"Lifetime of a span","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"TODO","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"the-active-span","dir":"Reference","previous_headings":"","what":"The active span","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"TODO","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"span-attributes","dir":"Reference","previous_headings":"","what":"Span attributes","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"TODO","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"span-links","dir":"Reference","previous_headings":"","what":"Span links","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"TODO","code":""},{"path":"https://otel.r-lib.org/reference/start_span.html","id":"span-options","dir":"Reference","previous_headings":"","what":"Span options","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"TODO","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":null,"dir":"Reference","previous_headings":"","what":"No-op logger provider — tracer_provider_noop","title":"No-op logger provider — tracer_provider_noop","text":"-op logger provider","code":""},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No-op logger provider — tracer_provider_noop","text":"","code":"tracer_provider_noop"},{"path":"https://otel.r-lib.org/reference/tracer_provider_noop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"No-op logger provider — tracer_provider_noop","text":"object class list length 1.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry tracing constants — tracing-constants","title":"OpenTelemetry tracing constants — tracing-constants","text":"Various constants related OpenTelemetry tracing.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry tracing constants — tracing-constants","text":"","code":"invalid_trace_id  invalid_span_id  span_kinds  span_status_codes"},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenTelemetry tracing constants — tracing-constants","text":"object class character length 1. object class character length 1. object class character length 5. object class character length 3.","code":""},{"path":"https://otel.r-lib.org/reference/tracing-constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry tracing constants — tracing-constants","text":"invalid_trace_id string scalar, invalid trace id. invalid_span_id string scalar, invalid span id. span_kinds character vector listing possible span kinds. span_status_codes character vector listing possible span status codes.","code":""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"Increase decrease OpenTelemetry -counter using default meter","code":""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"","code":"up_down_counter_add(name, value = 1L, attributes = NULL, context = NULL)"},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"name Name -counter. value Value add subtract counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://otel.r-lib.org/reference/up_down_counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"-counter object, invisibly.","code":""},{"path":[]},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate R code with an active OpenTelemetry span — with_active_span","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"Evaluate R code active OpenTelemetry span","code":""},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"","code":"with_active_span(span, expr)"},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"span OpenTelemetry span activate. expr R expression evaluate.","code":""},{"path":"https://otel.r-lib.org/reference/with_active_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"return value expr.","code":""}]
