[{"path":"https://r-lib.github.io/otel/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 otel authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r-lib.github.io/otel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer.","code":""},{"path":"https://r-lib.github.io/otel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). otel: R Implementation 'OpenTelemetry', exporters. R package version 0.0.0.9000, https://r-lib.github.io/otel/.","code":"@Manual{,   title = {otel: R Implementation of 'OpenTelemetry', exporters},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://r-lib.github.io/otel/}, }"},{"path":"https://r-lib.github.io/otel/index.html","id":"otel","dir":"","previous_headings":"","what":"R Implementation of OpenTelemetry, exporters","title":"R Implementation of OpenTelemetry, exporters","text":"OpenTelemetry API R packages projects High-quality, ubiquitous, portable telemetry enable effective observability. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data (metrics, logs, traces) analysis order understand software’s performance behavior.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"the-otel-and-otelsdk-r-packages","dir":"","previous_headings":"","what":"The otel and otelsdk R packages","title":"R Implementation of OpenTelemetry, exporters","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Implementation of OpenTelemetry, exporters","text":"Install otel CRAN: can install development version otel GitHub :","code":"# install.packages(\"pak\") pak::pak(\"otel\") # install.packages(\"pak\") pak::pak(\"r-lib/otel\")"},{"path":"https://r-lib.github.io/otel/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Implementation of OpenTelemetry, exporters","text":"instrumenting package, set otel_tracer_name variable desired default tracer (logger meter) name. See ?otelsdk::otel_tracer_name. Call otel::start_span() create span. default span ends caller function exits. Use $set_attribute(), $add_event(), $add_link() $set_status() methods span manipulate . See otelsdk package producing output instrumented R package project.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"zero-code-instrumentation","dir":"","previous_headings":"","what":"Zero-code instrumentation","title":"R Implementation of OpenTelemetry, exporters","text":"otel supports zero-code instrumentation via OTEL_INSTRUMENT_R_PKGS environment variable. Set comma separated list package names, packages want instrument. otel hook base::trace() produce OpenTelemetry output every function packages. default functions listed packages instrumented. instrument subset functions set OTEL_INSTRUMENT_R_PKGS_<PKG>_INCLUDE environment variable list glob expressions. <PKG> package name capital letters. functions match least one glob expression instrumented. exclude functions instrumentation, set OTEL_INSTRUMENT_R_PKGS_<PKG>_EXCLUDE environment variable list glob expressions. <PKG> package name capital letters. Functions match least one glob expression instrumented. Inclusion globs applied exclusion globs.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"production-and-development-r-sessions","dir":"","previous_headings":"","what":"Production and development R sessions","title":"R Implementation of OpenTelemetry, exporters","text":"Bye default otel otelsdk run production mode. production mode otel (otelsdk) functions never error. behavior help catching errors early development instrumented project. Set OTEL_ENV environment variable dev switch development mode, otel otelsdk functions fail errors.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"concurrency","dir":"","previous_headings":"","what":"Concurrency","title":"R Implementation of OpenTelemetry, exporters","text":"support concurrency single thread, e.g. Shiny app serving multiple requests time, can manage lifetime activation OpenTelemetry spans manually. recommend following practices -process concurrency: Create new long lasting span otel::start_span(scope = NULL). Assign returned span corresponding object concurrent /asynchronous computation. Every span finalizer closes span. running code belongs concurrent computation represented span, activate specific R scope calling with_active_span() local_active_span(). logging use with_active_span() local_active_span() activate span belongs log messages. Similarly, metrics, call with_active_span() local_active_span() link instruments correct span. concurrent computation ends, close span manually $end() method. (Otherwise closed next garbage collection, assuming references .)","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"shiny-apps","dir":"","previous_headings":"","what":"Shiny apps","title":"R Implementation of OpenTelemetry, exporters","text":"otel convenience functions tie otel spans Shiny sessions: Call start_shiny_app() global.R file, app starts . Call start_shiny_session() server function, start new Shiny session, pass Shiny session object . start_shiny_session() creates long lasting OpenTelemetry span session$userData$otel_span. span represents Shiny session, see “Concurrency” . Call otel::local_active_span(session$userData$otel_span) beginning reactive expression switch span represents current Shiny session. See examples included otel package.","code":""},{"path":"https://r-lib.github.io/otel/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R Implementation of OpenTelemetry, exporters","text":"MIT © Posit, PBC","code":""},{"path":"https://r-lib.github.io/otel/reference/as_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"R objects as OpenTelemetry attributes — as_attributes","title":"R objects as OpenTelemetry attributes — as_attributes","text":"Convert list R objects form suitable OpenTelemetry attributes.","code":""},{"path":"https://r-lib.github.io/otel/reference/as_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R objects as OpenTelemetry attributes — as_attributes","text":"","code":"as_attributes(x)"},{"path":"https://r-lib.github.io/otel/reference/as_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R objects as OpenTelemetry attributes — as_attributes","text":"x list R objects, used OpenTelemetry attributes.","code":""},{"path":"https://r-lib.github.io/otel/reference/as_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R objects as OpenTelemetry attributes — as_attributes","text":"named list can used attributes argument start_span(), log(), counter_add(), etc. x named, names empty string NA, integer numbers used missing invalid names. elements x natively supported R types OpenTelemetry (character, logical, double, integer), printed form captured using utils::capture.output().","code":""},{"path":"https://r-lib.github.io/otel/reference/as_attributes.html","id":"limits","dir":"Reference","previous_headings":"","what":"Limits","title":"R objects as OpenTelemetry attributes — as_attributes","text":"number attributes can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default 100. length attribute (vector) can limited OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT environment variable. default 100. Note applied length attribute R vector. E.g. currently limit number characters individual strings.","code":""},{"path":"https://r-lib.github.io/otel/reference/counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase an OpenTelemetry counter using the default meter — counter_add","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"Increase OpenTelemetry counter using default meter","code":""},{"path":"https://r-lib.github.io/otel/reference/counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"","code":"counter_add(name, value = 1L, attributes = NULL, context = NULL)"},{"path":"https://r-lib.github.io/otel/reference/counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"name Name counter. value Value add counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://r-lib.github.io/otel/reference/counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase an OpenTelemetry counter using the default meter — counter_add","text":"counter object, invisibly.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/default_tracer_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Default tracer (and meter and logger) name for an R package — default_tracer_name","title":"Default tracer (and meter and logger) name for an R package — default_tracer_name","text":"Default tracer (meter logger) name R package","code":""},{"path":"https://r-lib.github.io/otel/reference/default_tracer_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default tracer (and meter and logger) name for an R package — default_tracer_name","text":"","code":"default_tracer_name()"},{"path":"https://r-lib.github.io/otel/reference/extract_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a span context from HTTP headers received from a client — extract_http_context","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"return value can used parent option starting span.","code":""},{"path":"https://r-lib.github.io/otel/reference/extract_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"","code":"extract_http_context(headers)"},{"path":"https://r-lib.github.io/otel/reference/extract_http_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a span context from HTTP headers received from a client — extract_http_context","text":"headers named list one two strings: traceparent mandatory, tracestate optional.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/gauge_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"Record value OpenTelemetry gauge using default meter","code":""},{"path":"https://r-lib.github.io/otel/reference/gauge_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"","code":"gauge_record(name, value, attributes = NULL, context = NULL)"},{"path":"https://r-lib.github.io/otel/reference/gauge_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"name Name gauge value Value record. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://r-lib.github.io/otel/reference/gauge_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry gauge using the default meter — gauge_record","text":"gauge object, invisibly.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/get_active_span_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the active span context — get_active_span_context","title":"Returns the active span context — get_active_span_context","text":"sometimes useful writing loggers meters, associate logging metrics reporting traces.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_active_span_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the active span context — get_active_span_context","text":"","code":"get_active_span_context()"},{"path":"https://r-lib.github.io/otel/reference/get_active_span_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the active span context — get_active_span_context","text":"active span context. active span context, invalid span context returned, .e. spc$is_valid() FALSE returned spc.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/get_default_logger_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default tracer provider TODO — get_default_logger_provider","title":"Get the default tracer provider TODO — get_default_logger_provider","text":"Get default tracer provider TODO","code":""},{"path":"https://r-lib.github.io/otel/reference/get_default_logger_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default tracer provider TODO — get_default_logger_provider","text":"","code":"get_default_logger_provider()"},{"path":"https://r-lib.github.io/otel/reference/get_default_meter_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default metrics provider TODO — get_default_meter_provider","title":"Get the default metrics provider TODO — get_default_meter_provider","text":"Get default metrics provider TODO","code":""},{"path":"https://r-lib.github.io/otel/reference/get_default_meter_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default metrics provider TODO — get_default_meter_provider","text":"","code":"get_default_meter_provider()"},{"path":"https://r-lib.github.io/otel/reference/get_default_tracer_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default tracer provider — get_default_tracer_provider","title":"Get the default tracer provider — get_default_tracer_provider","text":"default set currently, creates sets default.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_default_tracer_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default tracer provider — get_default_tracer_provider","text":"","code":"get_default_tracer_provider()"},{"path":"https://r-lib.github.io/otel/reference/get_default_tracer_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default tracer provider — get_default_tracer_provider","text":"default tracer provider, otel_tracer_provider object.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_default_tracer_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the default tracer provider — get_default_tracer_provider","text":"default tracer provider created based OTEL_R_TRACES_EXPORTER environment variable. environment variable specifically R applications OpenTelemetry support. set, generic OTEL_TRACES_EXPORTER environment variable used. applies applications support OpenTelemetry use OpenTelemetry SDK. following values allowed: none: traces exported. stdout console: uses otelsdk::tracer_provider_stdstream, write traces standard output. stderr: uses otelsdk::tracer_provider_stdstream, write traces standard error. http otlp: uses otelsdk::tracer_provider_http, send traces HTTP, using OpenTelemetry Protocol (OTLP). <package>::<provider>: select <provider> object <package> package use trace exporter. calls <package>::<provider>$new() create new tracer provider. fails reason, e.g. package installed, throws error.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a logger from the default logger provider — get_logger","title":"Get a logger from the default logger provider — get_logger","text":"Get logger default logger provider","code":""},{"path":"https://r-lib.github.io/otel/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a logger from the default logger provider — get_logger","text":"","code":"get_logger(name = NULL)"},{"path":"https://r-lib.github.io/otel/reference/get_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a logger from the default logger provider — get_logger","text":"name Name new tracer. missing, deduced automatically.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/get_meter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a meter from the default meter provider — get_meter","title":"Get a meter from the default meter provider — get_meter","text":"Get meter default meter provider","code":""},{"path":"https://r-lib.github.io/otel/reference/get_meter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a meter from the default meter provider — get_meter","text":"","code":"get_meter(name = NULL)"},{"path":"https://r-lib.github.io/otel/reference/get_meter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a meter from the default meter provider — get_meter","text":"name Name new tracer. missing, deduced automatically.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/get_tracer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tracer from the default tracer provider — get_tracer","title":"Get a tracer from the default tracer provider — get_tracer","text":"Calls get_default_tracer_provider() get default tracer provider. calls $get_tracer() method create new tracer.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_tracer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tracer from the default tracer provider — get_tracer","text":"","code":"get_tracer(name = NULL)"},{"path":"https://r-lib.github.io/otel/reference/get_tracer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tracer from the default tracer provider — get_tracer","text":"name Name new tracer. missing, deduced automatically.","code":""},{"path":"https://r-lib.github.io/otel/reference/get_tracer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tracer from the default tracer provider — get_tracer","text":"OpenTelemetry tracer, otel_tracer object.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/histogram_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"Record value OpenTelemetry histogram using default meter","code":""},{"path":"https://r-lib.github.io/otel/reference/histogram_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"","code":"histogram_record(name, value, attributes = NULL, context = NULL)"},{"path":"https://r-lib.github.io/otel/reference/histogram_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"name Name histogram. value Value record. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://r-lib.github.io/otel/reference/histogram_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a value of an OpenTelemetry histogram using the default meter — histogram_record","text":"histogram object, invisibly.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/is_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry logging is active — is_logging","title":"Check whether OpenTelemetry logging is active — is_logging","text":"Check whether OpenTelemetry logging active","code":""},{"path":"https://r-lib.github.io/otel/reference/is_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry logging is active — is_logging","text":"","code":"is_logging()"},{"path":"https://r-lib.github.io/otel/reference/is_logging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry logging is active — is_logging","text":"TRUE OpenTelemetry logging active, FALSE otherwise.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/is_measuring.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry metrics collection is active — is_measuring","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"Check whether OpenTelemetry metrics collection active","code":""},{"path":"https://r-lib.github.io/otel/reference/is_measuring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"","code":"is_measuring()"},{"path":"https://r-lib.github.io/otel/reference/is_measuring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry metrics collection is active — is_measuring","text":"TRUE OpenTelemetry metrics collection  active, FALSE otherwise.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/is_tracing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether OpenTelemetry tracing is active — is_tracing","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"Check whether OpenTelemetry tracing active","code":""},{"path":"https://r-lib.github.io/otel/reference/is_tracing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"","code":"is_tracing()"},{"path":"https://r-lib.github.io/otel/reference/is_tracing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether OpenTelemetry tracing is active — is_tracing","text":"TRUE OpenTelemetry tracing active, FALSE otherwise.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/local_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate an OpenTelemetry span for an R scope — local_active_span","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"Activate OpenTelemetry span R scope","code":""},{"path":"https://r-lib.github.io/otel/reference/local_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"","code":"local_active_span(span, activation_scope = parent.frame())"},{"path":"https://r-lib.github.io/otel/reference/local_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate an OpenTelemetry span for an R scope — local_active_span","text":"span OpenTelemetry span activate. activation_scope scope activate , defaults caller frame.","code":""},{"path":"https://r-lib.github.io/otel/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Log an OpenTelemetry log message, using the default logger — log","title":"Log an OpenTelemetry log message, using the default logger — log","text":"Log OpenTelemetry log message, using default logger","code":""},{"path":"https://r-lib.github.io/otel/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log an OpenTelemetry log message, using the default logger — log","text":"","code":"log(msg, ..., severity = \"info\", .envir = parent.frame())  log_trace(msg, ..., .envir = parent.frame())  log_debug(msg, ..., .envir = parent.frame())  log_info(msg, ..., .envir = parent.frame())  log_warn(msg, ..., .envir = parent.frame())  log_error(msg, ..., .envir = parent.frame())  log_fatal(msg, ..., .envir = parent.frame())"},{"path":"https://r-lib.github.io/otel/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log an OpenTelemetry log message, using the default logger — log","text":"msg Log message, may contain R expressions evaluate within braces. ... Additional arguments passed $log() method default logger. severity Log severity, string, one \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\". .envir Environment evaluate interpolated  expressions log message . automatically deactivated scope.","code":""},{"path":"https://r-lib.github.io/otel/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log an OpenTelemetry log message, using the default logger — log","text":"logger, invisibly.","code":""},{"path":"https://r-lib.github.io/otel/reference/log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log an OpenTelemetry log message, using the default logger — log","text":"log_trace() log() severity_level \"trace\". log_debug() log() severity_level \"debug\". log_info() log() severity_level \"info\". log_warn() log() severity_level \"warn\". log_error() log() severity_level \"error\". log_fatal() log() severity_level \"fatal\".","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/log_severity_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry log severity levels — log_severity_levels","title":"OpenTelemetry log severity levels — log_severity_levels","text":"named integer vector, severity levels numeric form. names severity levels text form. otel functions accept forms severity levels, text form readable.","code":""},{"path":"https://r-lib.github.io/otel/reference/log_severity_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry log severity levels — log_severity_levels","text":"","code":"log_severity_levels"},{"path":"https://r-lib.github.io/otel/reference/log_severity_levels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenTelemetry log severity levels — log_severity_levels","text":"object class integer length 24.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/pack_http_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"returned headers can sent HTTP, set environment variables subprocesses.","code":""},{"path":"https://r-lib.github.io/otel/reference/pack_http_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"","code":"pack_http_context()"},{"path":"https://r-lib.github.io/otel/reference/pack_http_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack the currently active span context into standard HTTP OpenTelemetry headers — pack_http_context","text":"named character vector, lowercase names.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Start tracing a Shiny app — start_shiny_app","title":"Start tracing a Shiny app — start_shiny_app","text":"Call function global.R.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start tracing a Shiny app — start_shiny_app","text":"","code":"start_shiny_app(service_name = NULL)"},{"path":"https://r-lib.github.io/otel/reference/start_shiny_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start tracing a Shiny app — start_shiny_app","text":"service_name name app. Defaults name current working directory.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start tracing a Shiny app — start_shiny_app","text":"OpenTelemetry tracer (otel_tracer), invisibly.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Start tracing a Shiny session — start_shiny_session","title":"Start tracing a Shiny session — start_shiny_session","text":"Call function Shiny server function, beginning.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start tracing a Shiny session — start_shiny_session","text":"","code":"start_shiny_session(session, attributes = NULL, options = NULL, ...)"},{"path":"https://r-lib.github.io/otel/reference/start_shiny_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start tracing a Shiny session — start_shiny_session","text":"session Shiny session object. attributes, options, ... Additional arguments passed $start_span() session span.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_shiny_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start tracing a Shiny session — start_shiny_session","text":"OpenTelemetry span corresponding Shiny session, invisibly.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a new OpenTelemetry span, using the default tracer — start_span","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"Start new OpenTelemetry span, using default tracer","code":""},{"path":"https://r-lib.github.io/otel/reference/start_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"","code":"start_span(   name = NULL,   tracer_name = NULL,   ...,   scope = parent.frame(),   activation_scope = parent.frame() )"},{"path":"https://r-lib.github.io/otel/reference/start_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"name Name span. tracer_name name tracer use, see get_tracer(). ..., scope, activation_scope Additional arguments passed default tracer's start_span() method.","code":""},{"path":"https://r-lib.github.io/otel/reference/start_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a new OpenTelemetry span, using the default tracer — start_span","text":"new OpenTelemetry span object, invisibly.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/tracing.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenTelemetry tracing constants — tracing","title":"OpenTelemetry tracing constants — tracing","text":"Various constants related OpenTelemetry tracing.","code":""},{"path":"https://r-lib.github.io/otel/reference/tracing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenTelemetry tracing constants — tracing","text":"","code":"invalid_trace_id  invalid_span_id  span_kinds  span_status_codes"},{"path":"https://r-lib.github.io/otel/reference/tracing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenTelemetry tracing constants — tracing","text":"object class character length 1. object class character length 1. object class character length 5. object class character length 3.","code":""},{"path":"https://r-lib.github.io/otel/reference/tracing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenTelemetry tracing constants — tracing","text":"invalid_trace_id string scalar, invalid trace id. invalid_span_id string scalar, invalid span id. span_kinds character vector listing possible span kinds. span_status_codes character vector listing possible span status codes.","code":""},{"path":"https://r-lib.github.io/otel/reference/up_down_counter_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"Increase decrease OpenTelemetry -counter using default meter","code":""},{"path":"https://r-lib.github.io/otel/reference/up_down_counter_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"","code":"up_down_counter_add(name, value = 1L, attributes = NULL, context = NULL)"},{"path":"https://r-lib.github.io/otel/reference/up_down_counter_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"name Name -counter. value Value add subtract counter, defaults 1. attributes Additional attributes add. context Span context. missing active context used, .","code":""},{"path":"https://r-lib.github.io/otel/reference/up_down_counter_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase or decrease an OpenTelemetry up-down counter using the default meter — up_down_counter_add","text":"-counter object, invisibly.","code":""},{"path":[]},{"path":"https://r-lib.github.io/otel/reference/with_active_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate R code with an active OpenTelemetry span — with_active_span","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"Evaluate R code active OpenTelemetry span","code":""},{"path":"https://r-lib.github.io/otel/reference/with_active_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"","code":"with_active_span(span, expr)"},{"path":"https://r-lib.github.io/otel/reference/with_active_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"span OpenTelemetry span activate. expr R expression evaluate.","code":""},{"path":"https://r-lib.github.io/otel/reference/with_active_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate R code with an active OpenTelemetry span — with_active_span","text":"return value expr.","code":""}]
